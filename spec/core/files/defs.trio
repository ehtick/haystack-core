def:^absorption
doc:Cooling process using energy from heat source such as hot water
is:[^marker]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Absorption_refrigerator`
---
def:^ac
doc:Relating to alternating current electricity
is:[^marker]
lib:^lib:phIoT
---
def:^ac-elec
doc:Alternating current electricity
is:[^elec]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Alternating_current`
---
children:[{avg ac elec current angle sensor point},{avg ac elec current imbalance sensor point},{avg ac elec current magnitude sensor point},{avg ac elec current thd sensor point},{avg ac elec pf sensor point},{avg ac elec volt angle sensor point},{avg ac elec volt imbalance sensor point},{avg ac elec volt magnitude sensor point},{avg ac elec volt thd sensor point},{equip},{phase:"A" ac elec current angle sensor point},{phase:"A" ac elec current imbalance sensor point},{phase:"A" ac elec current magnitude sensor point},{phase:"A" ac elec current thd sensor point},{phase:"A" ac elec pf sensor point},{phase:"A" ac elec volt angle sensor point},{phase:"A" ac elec volt imbalance sensor point},{phase:"A" ac elec volt magnitude sensor point},{phase:"A" ac elec volt thd sensor point},{phase:"A" active ac elec power sensor point},{phase:"A" apparent ac elec power sensor point},{phase:"A" net ac elec active energy sensor point},{phase:"A" reactive ac elec power sensor point},{point},{total ac elec demand sensor point},{total active ac elec power sensor point},{total apparent ac elec power sensor point},{total export ac elec active energy sensor point},{total import ac elec active energy sensor point},{total net ac elec active energy sensor point},{total reactive ac elec power sensor point}]
def:^ac-elec-meter
doc:
  AC Electricity meter.
  See `docHaystack::Meters` chapter.
is:[^elec-meter]
lib:^lib:phIoT
meterScope:^meterScopeType
---
def:^ac-freq
doc:Frequency of alternating current
is:[^freq]
lib:^lib:phIoT
prefUnit:["Hz"]
quantityOf:[^ac-elec]
---
def:^accumulate
doc:
  Accumulate the tag's value during [inheritance]`docHaystack::Normalization#inherit`
  and [defx]`docHaystack::Normalization#defx`.  Tags marked as accumulate
  are aggregated together during normalization and deduplicated.  This
  marker must only be used on tags which expect a list value.
is:[^marker]
lib:^lib:ph
---
def:^active
doc:"Working, operative, effective"
is:[^marker]
lib:^lib:phIoT
---
def:^active-energy
doc:"Integral of `active-power` over time"
is:[^elec-energy]
lib:^lib:phIoT
prefUnit:["kWh"]
quantityOf:[^ac-elec]
---
def:^active-power
doc:"Active power or real power; energy transfer that contributes useful work"
is:[^elec-power]
lib:^lib:phIoT
prefUnit:["kW"]
quantityOf:[^ac-elec]
---
children:[{equip},{point}]
def:^actuator
doc:
  Equipment to move or control a mechanism.  Actuators may be manually
  operated or automated via a control system to convert an energy source
  into mechanical energy.  Typically the energy source is electricity,
  hydraulics, or pneumatics.
is:[^equip,^elec-input]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Actuator`
---
ahuZoneDelivery:^ahuZoneDeliveryType
airVolumeAdjustability:^airVolumeAdjustabilityType
children:[{bypass damper cmd point},{cool cmd point},{dessicantDehumidifier cmd point},{discharge duct equip},{economizer duct equip},{economizing cmd point},{equip},{exhaust duct equip},{faceBypass cmd point},{filter sensor point},{freezeStat sensor point},{heat cmd point},{heatWheel cmd point},{humidifier equip},{hvacMode sp point},{mixed duct equip},{outside duct equip},{point},{return duct equip},{thermostat equip},{ventilation duct equip}]
coolingProcess:^coolingProcessType
cools:^air
def:^ahu
dehumidifies:^air
doc:
  Air Handling Unit: An enclosure with a fan that delivers air to a space
  via ductwork and performs one or more of the functions of cleaning,
  heating, cooling, humidifying, dehumidifying, ventilating or circulating
  the air.  See `docHaystack::AHUs` chapter.
ductConfig:^ductConfigType
ductDeck:^ductDeckType
heatingProcess:^heatingProcessType
heats:^air
humidifies:^air
is:[^airHandlingEquip]
lib:^lib:phIoT
mandatory
ventilates:^air
wikipedia:`https://en.wikipedia.org/wiki/Air_handler`
---
def:^ahuZoneDelivery
doc:AHU delivery method of conditioned air to the zone
is:[^choice]
lib:^lib:phIoT
of:^ahuZoneDeliveryType
---
def:^ahuZoneDeliveryType
doc:AHU delivery method of conditioned air to the zone
is:[^marker]
lib:^lib:phIoT
---
def:^air
doc:The mixture of gases which surrounds the earth
is:[^gas]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Atmosphere_of_Earth`
---
def:^air-input
doc:Entity inputs air which flows from another entity
is:[^input]
lib:^lib:phIoT
---
def:^air-output
doc:Entity outputs air to other entities
is:[^output]
lib:^lib:phIoT
---
def:^air-temp
doc:Dry bulb temperature
is:[^temp]
lib:^lib:phScience
prefUnit:["°C","°F"]
quantityOf:[^air]
wikipedia:`https://en.wikipedia.org/wiki/Temperature`
---
def:^air-velocity
doc:Rate of air movement as distance over time
is:[^quantity]
lib:^lib:phScience
prefUnit:["m/sec","ft/min"]
quantityOf:[^air]
---
def:^airCooling
doc:Cooling by dissipating heat into the surrounding air
is:[^coolingProcessType,^air-input]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Air_cooling`
---
ahuZoneDelivery:^ahuZoneDeliveryType
airVolumeAdjustability:^airVolumeAdjustabilityType
children:[{bypass damper cmd point},{cool cmd point},{dessicantDehumidifier cmd point},{discharge duct equip},{economizer duct equip},{economizing cmd point},{equip},{exhaust duct equip},{faceBypass cmd point},{filter sensor point},{freezeStat sensor point},{heat cmd point},{heatWheel cmd point},{humidifier equip},{hvacMode sp point},{mixed duct equip},{outside duct equip},{point},{return duct equip},{thermostat equip},{ventilation duct equip}]
coolingProcess:^coolingProcessType
cools:^air
def:^airHandlingEquip
dehumidifies:^air
doc:
  HVAC equipment that conditions and delivers air via one or more fans.
  Conditioning of air includes heating, cooling, humidification,
  dehumidification, and ventilation. See `docHaystack::AHUs` chapter.
ductConfig:^ductConfigType
ductDeck:^ductDeckType
heatingProcess:^heatingProcessType
heats:^air
humidifies:^air
is:[^equip,^air-output,^elec-input]
lib:^lib:phIoT
ventilates:^air
wikipedia:`https://en.wikipedia.org/wiki/Air_handler`
---
def:^airQuality
doc:Concentration of contaminants in the air
is:[^concentration]
lib:^lib:phScience
quantityOf:[^air]
wikipedia:`https://en.wikipedia.org/wiki/Concentration`
---
children:[{zone air ch2o concentration sensor point},{zone air co concentration sensor point},{zone air co2 concentration sensor point},{zone air co2 concentration sp point},{zone air nh3 concentration sensor point},{zone air no2 concentration sensor point},{zone air o3 concentration sensor point},{zone air pm01 concentration sensor point},{zone air pm10 concentration sensor point},{zone air pm25 concentration sensor point},{zone air tvoc concentration sensor point}]
def:^airQualityZonePoints
doc:
  Entity with logical grouping of zone air quality points.
  See `docHaystack::Zones#airQuality` chapter.
is:[^pointGroup]
lib:^lib:phIoT
---
def:^airRef
doc:Air flows from the referent to this entity
inputs:^air
is:[^ref]
lib:^lib:phIoT
of:^air-output
tagOn:[^air-input]
---
children:[{discharge duct equip},{equip},{inlet duct equip},{point},{thermostat equip}]
def:^airTerminalUnit
doc:
  Equipment in air distribution systems which terminate at the space.
  Terminal units receive air from `airHandlingEquip` which have the
  primarily responsibility to condition air.  Terminal units are primarily
  responsible for delivery of air to the space and tempering the temperature.
ductConfig:^ductConfigType
is:[^equip,^air-input,^air-output,^elec-input]
lib:^lib:phIoT
---
def:^airVolumeAdjustability
doc:Ability of air handling equip to adjust volume of air flow
is:[^choice]
lib:^lib:phIoT
of:^airVolumeAdjustabilityType
---
def:^airVolumeAdjustabilityType
doc:Ability of air handling equip to adjust volume of air flow
is:[^marker]
lib:^lib:phIoT
---
def:^alarm
doc:Notification of a condition which requires attention
is:[^marker]
lib:^lib:phIoT
---
def:^angle
doc:Measurement of the relative difference in direction between two vectors or phasors
is:[^marker]
lib:^lib:phScience
---
def:^apparent
doc:Perceived quantity
is:[^marker]
lib:^lib:phScience
---
def:^apparent-energy
doc:"Integral of `apparent-power` over time"
is:[^quantity]
lib:^lib:phIoT
quantityOf:[^ac-elec]
---
def:^apparent-power
doc:Apparent power is perceived magnitude of power due to the combination of active and reactive power
is:[^quantity]
lib:^lib:phIoT
prefUnit:["kVA"]
quantityOf:[^ac-elec]
---
def:^area
doc:Area of a shape or floor space
is:[^number]
lib:^lib:phIoT
prefUnit:["ft²","m²"]
tagOn:[^site,^space]
---
def:^association
doc:
  Associations model ontological relationships between definitions.
  See [Associations]`docHaystack::Associations` chapter.
docTaxonomy
is:[^list]
lib:^lib:ph
of:^symbol
---
atesDesign:^atesDesignType
children:[{cool water flow thermal meter equip},{cool well equip},{equip},{extraction well equip},{flowInverter equip},{ground water flow sensor point},{ground water pressure sensor point},{ground water volume sensor point},{heatExchanger equip},{infiltration well equip},{point},{purge water flow sensor point},{purge water volume sensor point},{warm water flow thermal meter equip},{warm well equip}]
def:^ates
doc:
  Aquifer Thermal Energy Storage system.
  See `docHaystack::ATES` chapter.
is:[^equip]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Aquifer_thermal_energy_storage`
---
def:^atesClosedLoop
doc:
  The ATES uses closed piping to transport a water/glycol mixture
  through the ground. The system works like a heat exchanger; there
  is no ground water transported.
is:[^atesDesignType]
lib:^lib:phIoT
---
def:^atesDesign
doc:"Design type of the ATES underground system."
is:[^choice]
lib:^lib:phIoT
of:^atesDesignType
---
def:^atesDesignType
doc:"Design type of the ATES underground system."
is:[^marker]
lib:^lib:phIoT
---
def:^atesDoublet
doc:"The ATES has one or more pairs of a separate warm and cool well."
is:[^atesDesignType]
lib:^lib:phIoT
---
def:^atesDoubletPaired
doc:
  The ATES is as a doublet, but with specific warm and cool wells linked together.
  These linked wells do not exchange water with other wells.
is:[^atesDesignType]
lib:^lib:phIoT
---
def:^atesMono
doc:
  The ATES has only one physical well.  This well is deep enough
  to penetrate two layers of groundwater.
is:[^atesDesignType]
lib:^lib:phIoT
---
def:^atesUnidirectional
doc:
  Similar to a doublet, but water always flows in the same direction from
  the extraction to the infiltration well.
is:[^atesDesignType]
lib:^lib:phIoT
---
def:^atmospheric
doc:Related to the atmosphere of the earth
is:[^marker]
lib:^lib:phScience
---
def:^atmospheric-pressure
doc:Barometric pressure exerted by the weight of the atmosphere
is:[^pressure]
lib:^lib:phScience
prefUnit:["millibar","inHg"]
quantityOf:[^weather]
wikipedia:`https://en.wikipedia.org/wiki/Pressure`
---
def:^avg
doc:"Average; central or typical value; median"
is:[^marker]
lib:^lib:phScience
---
def:^bacnet
doc:ASHRAE building automation and control protocol
is:[^protocol]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/BACnet`
---
def:^barometric
doc:Relating atmospheric pressure
is:[^marker]
lib:^lib:phIoT
---
def:^baseUri
doc:Base URI for normalizing relative URIs
is:[^uri]
lib:^lib:ph
tagOn:[^lib]
---
children:[{equip},{point}]
def:^battery
doc:Equipment used to store electric energy
is:[^equip,^elec-output]
lib:^lib:phIoT
stores:^elec
wikipedia:`https://en.wikipedia.org/wiki/Electric_battery`
---
def:^blowdown
doc:Removal from container or pipe
is:[^marker]
lib:^lib:phIoT
---
def:^blowdown-water
doc:Water expelled from a system to remove mineral build up
is:[^water]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Water`
---
def:^blowdown-water-input
doc:Entity inputs blowdown water which flows from another entity
is:[^input]
lib:^lib:phIoT
---
def:^blowdown-water-output
doc:Entity outputs blowdown water to other entities
is:[^output]
lib:^lib:phIoT
---
def:^blowdownWaterRef
doc:Blowdown water flows from the referent to this entity
inputs:^blowdown-water
is:[^ref]
lib:^lib:phIoT
of:^blowdown-water-output
tagOn:[^blowdown-water-input]
---
def:^bluetooth
doc:Short range wireless communication protocol
is:[^protocol]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Bluetooth`
---
children:[{alarm sensor point},{equip},{point}]
def:^boiler
doc:Equipment to generate hot water or steam for heating
heatingProcess:^heatingProcessType
heats:^fluid
is:[^equip,^elec-input]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Boiler`
---
def:^bool
doc:
  Boolean value 'true' or 'false'.
  See [Kinds chapter]`docHaystack::Kinds#bool`.
is:[^scalar]
lib:^lib:ph
---
def:^bypass
doc:Pipe used to bypass an equipment
is:[^pipeSectionType]
lib:^lib:phIoT
---
children:[{discharge duct equip},{equip},{inlet duct equip},{point},{thermostat equip}]
def:^cav
doc:
  Constant air volume terminal unit.  CAV systems use a constant
  air flow rate with a variable air temperature.
ductConfig:^ductConfigType
is:[^airTerminalUnit]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Constant_air_volume`
---
def:^centrifugal
doc:Compression via a continuous flow of fluid through an impeller
is:[^marker]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Centrifugal_compressor`
---
def:^ch2o
doc:"Formaldehyde (CH₂O)"
is:[^gas]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Formaldehyde`
---
def:^ch2o-concentration
doc:"Concentration of formaldehyde (CH₂O) in the air."
is:[^airQuality]
lib:^lib:phScience
prefUnit:["µg/m³","ppb"]
quantityOf:[^air]
wikipedia:`https://en.wikipedia.org/wiki/Concentration`
---
def:^ch4
doc:"Methane (CH₄)"
is:[^gas]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Methane`
---
def:^ch4-emission
doc:"Greenhouse gas emission of methane (CH₄) into the air."
is:[^emission]
lib:^lib:phScience
prefUnit:["kg","ton","lb"]
quantityOf:[^air]
---
accumulate
def:^children
doc:
  List of prototypes contained by this entity.
  See [Protos chapter]`docHaystack::Protos` for more details.
is:[^list]
lib:^lib:ph
of:^dict
---
def:^childrenFlatten
doc:
  List of aspects to flatten into children prototypes.
  See [Protos chapter]`docHaystack::Protos` for more details.
is:[^list]
lib:^lib:ph
of:^symbol
---
def:^chilled
doc:Substance is cooled using cooling process
is:[^marker]
lib:^lib:phIoT
---
def:^chilled-water
doc:Water cooled for use in HVAC and industrial processes
is:[^water]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Chilled_water`
---
def:^chilled-water-input
doc:Entity inputs chilled water which flows from another entity
is:[^input]
lib:^lib:phIoT
---
def:^chilled-water-output
doc:Entity outputs chilled water to other entities
is:[^output]
lib:^lib:phIoT
---
children:[{chilled water bypass pipe equip},{chilled water delta flow point},{chilled water delta pressure point},{chilled water delta temp point},{chilled water entering pipe equip},{chilled water header pipe equip},{chilled water heatExchanger equip},{chilled water leaving pipe equip},{chiller equip},{condenser water bypass pipe equip},{condenser water delta flow sensor point},{condenser water delta pressure sensor point},{condenser water delta temp sensor point},{coolingTower equip},{enable cmd point},{equip},{point}]
condenserLoop:^condenserLoopType
def:^chilled-water-plant
doc:
  Plant used to generate chilled water for cooling.
  See `docHaystack::Plants`.
is:[^plant,^chilled-water-output]
lib:^lib:phIoT
produces:^chilled-water
---
children:[{equip},{point}]
coolingProcess:^chilledWaterCooling
cools:^air
def:^chilledBeam
doc:Conditions a space using a heat exchanger integrated into the ceiling
heatingProcess:^heatingProcessType
heats:^air
is:[^radiantEquip]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Chilled_beam`
---
def:^chilledBeamZone
doc:AHU supplies air to chilled beam terminal units
is:[^ahuZoneDeliveryType]
lib:^lib:phIoT
---
def:^chilledWaterCooling
doc:Cooling using transfer of heat to chilled water
is:[^coolingProcessType,^chilled-water-input]
lib:^lib:phIoT
---
def:^chilledWaterRef
doc:Chilled water flows from the referent to this entity
inputs:^chilled-water
is:[^ref]
lib:^lib:phIoT
of:^chilled-water-output
tagOn:[^chilled-water-input]
---
children:[{alarm sensor point},{chilled water delta flow sensor point},{chilled water delta temp sensor point},{chilled water entering pipe equip},{chilled water leaving pipe equip},{chilled water valve isolation cmd point},{condenser refrig pressure sensor point},{condenser refrig temp sensor point},{condenser run cmd point},{condenser run sensor point},{condenser water entering pipe equip},{condenser water leaving pipe equip},{condenser water valve isolation cmd point},{efficiency sensor point},{enable cmd point},{enable sensor point},{equip},{evaporator refrig pressure sensor point},{evaporator refrig temp sensor point},{load cmd point},{load sensor point},{point},{run cmd point},{run sensor point}]
chillerMechanism:^chillerMechanismType
cools:^chilled-water
def:^chiller
doc:
  Equipment to remove heat from a liquid.  Chillers typically use a vapor
  compression or an absorption refrigeration cycle.
is:[^equip,^elec-input]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Chiller`
---
def:^chiller-absorption
doc:Cooling process using energy from heat source such as hot water
is:[^absorption,^chillerMechanismType]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Absorption_refrigerator`
---
def:^chiller-centrifugal
doc:Compression via a continuous flow of fluid through an impeller
is:[^centrifugal,^chillerMechanismType]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Centrifugal_compressor`
---
def:^chiller-reciprocal
doc:Piston compressor driven by a crankshaft
is:[^reciprocal,^chillerMechanismType]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Reciprocating_compressor`
---
def:^chiller-rotaryScrew
doc:Rotary screw compression
is:[^rotaryScrew,^chillerMechanismType]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Rotary-screw_compressor`
---
def:^chillerMechanism
doc:Primary mechanism of chiller
is:[^choice]
lib:^lib:phIoT
of:^chillerMechanismType
---
def:^chillerMechanismType
doc:Primary mechanism of chiller
is:[^marker]
lib:^lib:phIoT
---
def:^choice
doc:
  Choice specifies an exclusive marker selection.
  See [Choices]`docHaystack::Choices` chapter.
docTaxonomy
is:[^symbol]
lib:^lib:ph
---
def:^circ
doc:Pipe used to circulate fluid through an equipment or system
is:[^pipeSectionType]
lib:^lib:phIoT
---
children:[{equip},{point}]
def:^circuit
doc:
  Electrical circuit and its associated components such as breakers.
  See `docHaystack::ElecPanels#circuits` chapter.
is:[^equip,^elec-input,^elec-output]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Electrical_network`
---
def:^cloudage
doc:"Percentage of sky obscured by clouds. This is also known as cloudiness, or cloud amount."
is:[^quantity]
lib:^lib:phScience
prefUnit:["%"]
quantityOf:[^weather]
---
def:^cmd
doc:
  Point is a command, actuator, AO/BO.
  See `docHaystack::Points#function` chapter.
is:[^pointFunctionType]
lib:^lib:phIoT
---
def:^co
doc:"Carbon monoxide (CO)"
is:[^gas]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Carbon_monoxide`
---
def:^co-concentration
doc:"Concentration of carbon monoxide (CO) in the air."
is:[^airQuality]
lib:^lib:phScience
prefUnit:["ppm"]
quantityOf:[^air]
wikipedia:`https://en.wikipedia.org/wiki/Concentration`
---
def:^co2
doc:"Carbon dioxide (CO₂)"
is:[^gas]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Carbon_dioxide`
---
def:^co2-concentration
doc:"Concentration of carbon dioxide (CO₂) in the air."
is:[^airQuality]
lib:^lib:phScience
prefUnit:["ppm"]
quantityOf:[^air]
wikipedia:`https://en.wikipedia.org/wiki/Concentration`
---
def:^co2-emission
doc:"Greenhouse gas emission of carbon dioxide (CO₂) into the air."
is:[^emission]
lib:^lib:phScience
prefUnit:["kg","ton","lb"]
quantityOf:[^air]
---
def:^co2e
doc:Carbon dioxide equivalent
is:[^marker]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Global_warming_potential`
---
def:^coap
doc:Constrained Application Protocol
is:[^protocol]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Constrained_Application_Protocol`
---
children:[{equip},{point}]
def:^coil
doc:
  Heat exchanger used to heat or cool air.  Coils are sub-components
  of HVAC equipment such as `airHandlingEquip`.
is:[^heatExchanger]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Heat_exchanger#HVAC_air_coils`
---
def:^cold
doc:Having low degree of heat
is:[^marker]
lib:^lib:phIoT
---
def:^cold-water
doc:Water supplied to cold taps
is:[^water]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Water`
---
def:^coldDeck
doc:Duct carries air for cooling
is:[^ductDeckType]
lib:^lib:phIoT
---
def:^computed
doc:
  Indicates a definition which is computed.  Computed defs cannot be
  used as tags themselves.
is:[^marker]
lib:^lib:ph
---
def:^computer
doc:"General purpose computer."
is:[^device]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Computer`
---
def:^concentration
doc:"Abundance of substance in the total volume of a mixture."
is:[^quantity]
lib:^lib:phScience
quantityOf:[^substance]
wikipedia:`https://en.wikipedia.org/wiki/Concentration`
---
def:^condensate
doc:Liquid phase produced by the condensation of steam or other gas
is:[^liquid]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Liquid`
---
def:^condensate-input
doc:Entity inputs condensate which flows from another entity
is:[^input]
lib:^lib:phIoT
---
def:^condensate-output
doc:Entity outputs condensate to other entities
is:[^output]
lib:^lib:phIoT
---
def:^condensateRef
doc:Condensate flows from the referent to this entity
inputs:^condensate
is:[^ref]
lib:^lib:phIoT
of:^condensate-output
tagOn:[^condensate-input]
---
def:^condenser
doc:Device or related to process of condensation
is:[^marker]
lib:^lib:phIoT
---
def:^condenser-water
doc:Water used used to remove heat through condensation
is:[^water]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Water`
---
def:^condenser-water-input
doc:Entity inputs condenser water which flows from another entity
is:[^input]
lib:^lib:phIoT
---
def:^condenser-water-output
doc:Entity outputs condenser water to other entities
is:[^output]
lib:^lib:phIoT
---
def:^condenserClosedLoop
doc:Working fluid is kept separate from fluid used for heat transfer into the atmosphere
is:[^condenserLoopType]
lib:^lib:phIoT
---
def:^condenserCooling
doc:Removal of heat through the process of water condensation
is:[^coolingProcessType]
lib:^lib:phIoT
---
def:^condenserLoop
doc:Open or closed loop for condenser working fluid
is:[^choice]
lib:^lib:phIoT
of:^condenserLoopType
---
def:^condenserLoopType
doc:Open or closed loop for condenser working fluid
is:[^marker]
lib:^lib:phIoT
---
def:^condenserOpenLoop
doc:Uses working fluid itself for evaporation into the atmosphere
is:[^condenserLoopType]
lib:^lib:phIoT
---
def:^condenserWaterRef
doc:Condenser water flows from the referent to this entity
inputs:^condenser-water
is:[^ref]
lib:^lib:phIoT
of:^condenser-water-output
tagOn:[^condenser-water-input]
---
children:[{equip},{point}]
conveys:^phenomenon
def:^conduit
doc:"Duct, pipe, or cable to convey a substance or phenomenon"
is:[^equip]
lib:^lib:phIoT
---
def:^constantAirVolume
doc:
  Delivers a constant volume of air flow.  Typically this means
  equipment with a single speed fan.
is:[^airVolumeAdjustabilityType]
lib:^lib:phIoT
---
def:^containedBy
doc:"The entity is logically contained by the referent."
is:[^relationship]
lib:^lib:ph
reciprocalOf:^contains
transitive
---
computed
def:^contains
doc:Entities logically contained by this entity
is:[^relationship]
lib:^lib:ph
reciprocalOf:^containedBy
transitive
---
def:^controller
doc:
  Microprocessor based device used in a control system.  Controllers
  interact with the physical world through direct I/O to sensors and
  actuators or via network [protocols]`protocol`.
is:[^device]
lib:^lib:phIct
---
def:^controls
doc:Associated with the control system for an industrial process
is:[^marker]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Control_system`
---
children:[{controller device},{equip},{networking device},{point}]
def:^controls-panel
doc:Panel housing controllers and networking gear
is:[^panel]
lib:^lib:phIct
---
def:^conveys
doc:"Equipment conveys a substance or phenomenon."
is:[^equipFunction]
lib:^lib:phIoT
of:^phenomenon
---
def:^cool
doc:
  Associted with low temperature or cooling processes.  When used on a point,
  this tag is associated with the control of cooling.  When paired with a
  substance, this tag indicates the substance is relatively cool in comparison
  to another substance, without being actively cooled by e.g. a chiller.
is:[^marker]
lib:^lib:phIoT
---
def:^cool-water
doc:Relatively cool water without active chilling
is:[^water]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Water`
---
def:^cooling
doc:Cooling mode or process
is:[^marker]
lib:^lib:phIoT
---
def:^coolingCapacity
doc:Measurement of a chiller ability to remove heat measured
is:[^number]
lib:^lib:phIoT
prefUnit:["tonref","BTU/h","kW"]
tagOn:[^chiller]
---
children:[{chilled water cool valve cmd point},{equip},{point},{stage:1 cool run cmd point}]
childrenFlatten:[^ductDeckType,^ductSectionType]
coolingProcess:^coolingProcessType
cools:^air
def:^coolingCoil
doc:"Coil used to cool air."
is:[^coil]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Heat_exchanger#HVAC_air_coils`
---
def:^coolingOnly
doc:Equipment without heating
is:[^marker]
lib:^lib:phIoT
---
def:^coolingProcess
doc:Processed used to cool a substance
is:[^choice]
lib:^lib:phIoT
of:^coolingProcessType
---
def:^coolingProcessType
doc:Processed used to cool a substance
is:[^process]
lib:^lib:phIoT
---
children:[{condenser water entering pipe equip},{condenser water leaving pipe equip},{equip},{fan motor equip},{point}]
cools:^condenser-water
def:^coolingTower
doc:Equipment to transfer waste heat into the atmosphere
is:[^equip,^elec-input]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Cooling_tower`
---
def:^cools
doc:"Equipment removes heat from a substance."
is:[^equipFunction]
lib:^lib:phIoT
of:^substance
---
def:^coord
doc:
  Geographic coordinate in latitude/longitude in decimal degrees.
  See [Kinds chapter]`docHaystack::Kinds#coord`.
is:[^scalar]
lib:^lib:ph
---
ahuZoneDelivery:^ahuZoneDeliveryType
airVolumeAdjustability:^airVolumeAdjustabilityType
children:[{bypass damper cmd point},{cool cmd point},{dessicantDehumidifier cmd point},{discharge duct equip},{economizer duct equip},{economizing cmd point},{equip},{exhaust duct equip},{faceBypass cmd point},{filter sensor point},{freezeStat sensor point},{heat cmd point},{heatWheel cmd point},{humidifier equip},{hvacMode sp point},{mixed duct equip},{outside duct equip},{point},{return duct equip},{thermostat equip},{ventilation duct equip}]
coolingProcess:^coolingProcessType
cools:^air
def:^crac
dehumidifies:^air
doc:
  Computer Room Air Conditioner: An FCU designed to condition a computer
  room.  See `docHaystack::AHUs` and `docHaystack::DataCenters` chapters.
ductConfig:^ductConfigType
ductDeck:^ductDeckType
heatingProcess:^heatingProcessType
heats:^air
humidifies:^air
is:[^fcu]
lib:^lib:phIoT
ventilates:^air
wikipedia:`https://en.wikipedia.org/wiki/Fan_coil_unit`
---
def:^cur
doc:Supports current value
is:[^marker]
lib:^lib:phIoT
tagOn:[^point]
---
def:^cur-point
doc:
  Point with support to report a "real-time" current value.  By real-time
  we typically mean freshness within the order of a few seconds or at
  most a few minutes.  For systems with direct I/O the current value is
  typically driven by the I/O scan rate. For overlay systems which acquire
  data via a protocol such as BACnet or Modbus then the current value
  is typically refreshed using polling or subscription over a network.
  Also see `docHaystack::Points#cur` chapter.
is:[^point]
lib:^lib:phIoT
pointFunction:^pointFunctionType
pointQuantity:^quantity
pointSubject:^phenomenon
---
def:^curErr
doc:"Error description when `curStatus` indicates error condition"
is:[^str]
lib:^lib:phIoT
tagOn:[^cur-point]
transient
---
def:^curStatus
doc:
  Status of point's current value reading.  The `curVal` is only available
  when curStatus is "ok" or "stale".  However a "stale" value should
  be used with caution since the local system does not have a fresh value.
  It is recommended that the `curVal` tag is removed from a point
  when the curStatus is not "ok" nor "stale".
enum:
  - ok: all is okay
  - stale: the point's curVal is not fresh data
  - fault: a configuration or hardware problem - see `curErr`
  - down: a communication or network problem - see `curErr`
  - disabled: manual disable of the point or connector
  - unknown: we don't know anything (usually boot state)
  - remoteFault: point in remote system is fault
  - remoteDown: point in remote system is down
  - remoteDisabled: point in remote system is disabled
  - remoteUnknown: point in remote system is unknown
is:[^str]
lib:^lib:phIoT
tagOn:[^cur-point]
transient
---
def:^curVal
doc:
  Current value of a point.  The current value is only available when
  the `curStatus` is "ok" or "stale".
is:[^scalar]
lib:^lib:phIoT
tagOn:[^cur-point]
transient
---
def:^current
doc:Movement of fluid or electricity
is:[^marker]
lib:^lib:phScience
---
def:^current-angle
doc:AC current phase angle
is:[^quantity]
lib:^lib:phIoT
prefUnit:["deg"]
quantityOf:[^ac-elec]
---
def:^current-imbalance
doc:Current phase imbalance in a multiphase AC system
is:[^quantity]
lib:^lib:phIoT
prefUnit:["%"]
quantityOf:[^ac-elec]
---
def:^current-magnitude
doc:Magnitude of electrical current
is:[^elec-current]
lib:^lib:phIoT
prefUnit:["A"]
quantityOf:[^ac-elec]
---
def:^current-thd
doc:Total harmonic current distortion
is:[^quantity]
lib:^lib:phIoT
prefUnit:["%"]
quantityOf:[^ac-elec]
---
def:^dali
doc:Digital Addressable Lighting Interface protocol for lighting
is:[^protocol]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Digital_Addressable_Lighting_Interface`
---
def:^damper
doc:"Damper equipment or control point."
is:[^marker]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Damper_(flow)`
---
children:[{damper cmd point},{damper sensor point},{equip},{point}]
childrenFlatten:[^ductSectionType]
def:^damper-actuator
doc:"Actuator to regulate the flow of air."
ductSection:^ductSectionType
is:[^actuator]
lib:^lib:phIoT
regulates:^air
wikipedia:`https://en.wikipedia.org/wiki/Damper_(flow)`
---
children:[{crac fcu equip},{equip},{point},{rack equip},{space}]
def:^dataCenter
doc:
  Space used to house computer and networking gear.
  See `docHaystack::DataCenters` chapter.
is:[^space]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Data_center`
---
def:^date
doc:
  ISO 8601 date as year, month, day: '2011-06-07'.
  See [Kinds chapter]`docHaystack::Kinds#date`.
is:[^scalar]
lib:^lib:ph
---
def:^dateTime
doc:
  ISO 8601 timestamp followed by timezone identifier.
  See [Kinds chapter]`docHaystack::Kinds#dateTime`.
is:[^scalar]
lib:^lib:ph
---
def:^daytime
doc:Time between sunrise and sunset
enum:
  - nighttime: false indicates sun is below horizon
  - daytime: true indicates sun is above horizon
is:[^quantity]
lib:^lib:phScience
quantityOf:[^weather]
---
def:^dc
doc:Relating to direct current electricity
is:[^marker]
lib:^lib:phIoT
---
def:^dc-elec
doc:Direct current electricity
is:[^elec]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Direct_current`
---
children:[{equip},{point}]
def:^dc-elec-meter
doc:
  DC Electricity meter.
  See `docHaystack::Meters` chapter.
is:[^elec-meter]
lib:^lib:phIoT
meterScope:^meterScopeType
---
def:^deadband
doc:
  The range in a process where no changes to output are made.
  May also indicate the difference between a base setpoint and effective
  setpoint.
is:[^marker]
lib:^lib:phIoT
---
def:^def
doc:
  Create a new definition bound to the given symbol.
  See [Defs chapter]`docHaystack::Defs`.
is:[^symbol]
lib:^lib:ph
---
def:^defx
doc:
  Extends the given definition with additional meta tags.
  See [Normalization]`docHaystack::Normalization#defx`.
is:[^symbol]
lib:^lib:ph
---
def:^dehumidifies
doc:"Equipment removes moisture from air to decrease humidity."
is:[^equipFunction]
lib:^lib:phIoT
of:^air
---
def:^delta
doc:"Differential of fluid between entering and leaving sensors."
is:[^marker]
lib:^lib:phIoT
---
def:^demand
doc:"Rate required for a process."
is:[^marker]
lib:^lib:phIoT
---
def:^depends
doc:
  List of this library's dependencies.  The dependent libs define the
  [lib namespace]`docHaystack::Namespaces#lib`. Also see
  [Normalization]`docHaystack::Normalization#resolve`.
is:[^list]
lib:^lib:ph
of:^ref
tagOn:[^lib]
---
def:^deprecated
doc:Obsoleted
is:[^marker]
lib:^lib:ph
---
def:^dessicantDehumidifier
doc:"Decreases humidity from air using a substance which absorbs moisture."
is:[^marker]
lib:^lib:phIoT
---
def:^device
doc:
  Microprocessor based hardware device.  This is the general term for
  all computers, mobile phones, controllers, and I/O modules.
  See `docHaystack::Devices#networks` chapter.
docTaxonomy
is:[^entity]
lib:^lib:phIct
mandatory
---
def:^deviceRef
doc:Device which controls a monitors this entity
is:[^ref]
lib:^lib:phIct
of:^device
---
def:^dewPoint
doc:Dew point temperature at which water vapor will form dew
is:[^quantity]
lib:^lib:phScience
prefUnit:["°C","°F"]
quantityOf:[^air]
---
def:^dict
doc:
  Map of name/value tag pairs.
  See [Kinds chapter]`docHaystack::Kinds#dict`.
is:[^val]
lib:^lib:ph
---
def:^directZone
doc:AHU supplies air directly to the zone
is:[^ahuZoneDeliveryType]
lib:^lib:phIoT
---
def:^direction
doc:"Compass direction measured in degrees: North: 0° = 360°, East: 90°, South: 180°, West: 270°"
is:[^quantity]
lib:^lib:phScience
prefUnit:["deg"]
---
def:^dis
doc:
  Display name for an entity.
  See `docHaystack::Ontology#entities` chapter.
is:[^str]
lib:^lib:ph
tagOn:[^entity]
---
def:^discharge
doc:Duct for air leaving an equipment
is:[^ductSectionType]
lib:^lib:phIoT
---
def:^diverting
doc:"Three way valve which inputs one pipe and diverts between two output pipes."
is:[^marker]
lib:^lib:phIoT
---
ahuZoneDelivery:^ahuZoneDeliveryType
airVolumeAdjustability:^airVolumeAdjustabilityType
children:[{bypass damper cmd point},{cool cmd point},{dessicantDehumidifier cmd point},{discharge duct equip},{economizer duct equip},{economizing cmd point},{equip},{exhaust duct equip},{faceBypass cmd point},{filter sensor point},{freezeStat sensor point},{heat cmd point},{heatWheel cmd point},{humidifier equip},{hvacMode sp point},{mixed duct equip},{outside duct equip},{point},{return duct equip},{thermostat equip},{ventilation duct equip}]
coolingProcess:^coolingProcessType
cools:^air
def:^doas
dehumidifies:^air
doc:
  Dedicated Outside Air System: An AHU that brings in 100% outside air and
  no recirculated air in order to provide ventilation to spaces.
  See `docHaystack::AHUs` chapter.
ductConfig:^ductConfigType
ductDeck:^ductDeckType
heatingProcess:^heatingProcessType
heats:^air
humidifies:^air
is:[^ahu]
lib:^lib:phIoT
ventilates:^air
wikipedia:`https://en.wikipedia.org/wiki/Air_handler`
---
def:^doc
doc:
  Documentation in simplified flavor of markdown.  The first
  sentence up to the period is used as the summary.
  
  Specific formatting options:
  pre>
  // inline formatting
  *italic*           // italics font
  **bold**           // bold font
  'code'             // code or API term
  `point`            // hyperlink to def (code link)
  [text]`point`      // hyperlink with explicit link text
  ![alt]`image.png`  // image
  
  // unordered list
  - one
  - two
  - three
  
  // ordered list; use numbers or letters
  1. one
  2. two
  3. three
  <pre
  
  The main difference between markdown is that inline code uses single
  ticks and hyperlinks are annotated using the backtick.  Links may be:
    - absolute http/https URIs
    - def symbol such as "site" or "hot-water"
is:[^str]
lib:^lib:ph
tagOn:[^def]
---
def:^docAssociations
doc:"Generate a section in the docs for this association."
is:[^marker]
lib:^lib:ph
---
def:^docTaxonomy
doc:
  Generate a taxonomy tree for this term in the documentationindex.
  When applied to a def, then it will will be listed in the docs
  under the [taxonomies]`docHaystack::Docs#taxonomies` section.
is:[^marker]
lib:^lib:ph
notInherited
---
def:^domestic
doc:For human use
is:[^marker]
lib:^lib:phIoT
---
def:^domestic-water
doc:"Tap water for drinking, washing, cooking, and flushing of toilets"
is:[^water]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Water`
---
def:^domestic-water-input
doc:Entity inputs domestic water which flows from another entity
is:[^input]
lib:^lib:phIoT
---
def:^domestic-water-output
doc:Entity outputs domestic water to other entities
is:[^output]
lib:^lib:phIoT
---
def:^domesticWaterRef
doc:Domestic water flows from the referent to this entity
inputs:^domestic-water
is:[^ref]
lib:^lib:phIoT
of:^domestic-water-output
tagOn:[^domestic-water-input]
---
def:^dualDuct
doc:"Two ducts: combination of hotDeck, coldDeck, or neutralDeck"
is:[^ductConfigType]
lib:^lib:phIoT
---
children:[{air co2 concentration sensor point},{air co2 concentration sp point},{air dewPoint sensor point},{air dewPoint sp point},{air enthalpy sensor point},{air enthalpy sp point},{air flow sensor point},{air flow sp point},{air humidity sensor point},{air humidity sp point},{air pressure sensor point},{air pressure sp point},{air temp sensor point},{air temp sp point},{coolingCoil equip},{damper actuator equip},{equip},{fan motor equip},{heatingCoil equip},{point}]
childrenFlatten:[^ductDeckType,^ductSectionType]
conveys:^air
def:^duct
doc:Conduit used to convey air for HVAC
ductDeck:^ductDeckType
ductSection:^ductSectionType
is:[^conduit]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Duct_(flow)`
---
def:^ductArea
doc:"Config point on a `vav` for duct area measured in ft² or m²"
is:[^marker]
lib:^lib:phIoT
---
def:^ductConfig
doc:Ductwork configuration
is:[^choice]
lib:^lib:phIoT
of:^ductConfigType
---
def:^ductConfigType
doc:Ductwork configuration
is:[^marker]
lib:^lib:phIoT
---
def:^ductDeck
doc:
  Cold, hot, or neutral deck. Can be applied to 'ahu' equip if the AHU
  is part of a 'dualDuct' or 'tripleDuct' system but only serves a single
  deck type.
is:[^choice]
lib:^lib:phIoT
of:^ductDeckType
---
def:^ductDeckType
doc:"Cold, hot, or neutral deck"
is:[^marker]
lib:^lib:phIoT
---
def:^ductSection
doc:Equipment section of ductwork
is:[^choice]
lib:^lib:phIoT
of:^ductSectionType
---
def:^ductSectionType
doc:Equipment section of ductwork
is:[^marker]
lib:^lib:phIoT
---
def:^duration
doc:Number with a unit of time
is:[^number]
lib:^lib:ph
---
def:^dxCooling
doc:Cooling using direct expansion of a refrigerant vapor
is:[^coolingProcessType]
lib:^lib:phIoT
---
def:^dxHeating
doc:Heating using direct expansion of a refrigerant vapor
is:[^heatingProcessType]
lib:^lib:phIoT
---
def:^economizer
doc:"Duct to access fresh outside air only for economizing, not ventilation"
is:[^ductSectionType]
lib:^lib:phIoT
---
def:^economizing
doc:"Energy reduction mode which augments heating/cooling with outside air."
is:[^marker]
lib:^lib:phIoT
---
def:^effective
doc:Current control setpoint in effect taking into account other factors
is:[^marker]
lib:^lib:phIoT
---
def:^efficiency
doc:"Efficiency point of a chiller measured in \"COP\" or \"kW/ton\"."
is:[^marker]
lib:^lib:phIoT
---
def:^elec
doc:"Associated with electricity, electric charge"
is:[^phenomenon]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Electricity`
---
def:^elec-current
doc:Electrical current
is:[^quantity]
lib:^lib:phScience
quantityOf:[^elec]
---
def:^elec-demand
doc:
  Active power averaged over a rolling interval.  For utility meters
  the demand interval is based on the billing period.
is:[^active-power]
lib:^lib:phIoT
prefUnit:["kW"]
quantityOf:[^ac-elec]
---
def:^elec-energy
doc:Electrical energy consumed
is:[^energy]
lib:^lib:phScience
prefUnit:["kWh"]
quantityOf:[^elec]
---
def:^elec-input
doc:Entity inputs electricity which flows from another entity
is:[^input]
lib:^lib:phIoT
---
children:[{equip},{point}]
def:^elec-meter
doc:Electricity meter
is:[^meter,^elec-input,^elec-output]
lib:^lib:phIoT
meterScope:^meterScopeType
---
def:^elec-output
doc:Entity outputs electricity to other entities
is:[^output]
lib:^lib:phIoT
---
children:[{equip},{point}]
def:^elec-panel
doc:
  Physical housing for electrical circuits, fuses, and breakers.
  See `docHaystack::ElecPanels#panels` chapter.
is:[^panel,^elec-input,^elec-output]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Distribution_board`
---
def:^elec-power
doc:Electrical energy consumed per unit time
is:[^power]
lib:^lib:phScience
prefUnit:["kW"]
quantityOf:[^elec]
---
def:^elec-volt
doc:"Electrical voltage, potential difference"
is:[^quantity]
lib:^lib:phScience
quantityOf:[^elec]
---
def:^elecHeating
doc:Heating by the conversion of electrical energy
is:[^heatingProcessType,^elec-input]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Electric_heating`
---
def:^elecRef
doc:Electricity flows from the referent to this entity
inputs:^elec
is:[^ref]
lib:^lib:phIoT
of:^elec-output
tagOn:[^elec-input]
---
children:[{equip},{point}]
def:^elevator
doc:"Enclosure used to move people between floors."
is:[^verticalTransport,^elec-input]
lib:^lib:phIoT
moves:^occupants
wikipedia:`https://en.wikipedia.org/wiki/Elevator`
---
def:^emission
doc:Amount of a substance discharged into the air
is:[^quantity]
lib:^lib:phScience
quantityOf:[^air]
---
def:^enable
doc:
  Secondary on/off `point` of an `equip` especially used with a `vfd`.
  Enable is used with Bool points where true indicates on and false
  indicates off.  Equip with an enable should always also define a `run`
  point which indicates the primary on/off state of the equipment.
is:[^marker]
lib:^lib:phIoT
---
def:^energy
doc:Measure of ability to do work
is:[^quantity]
lib:^lib:phScience
---
def:^entering
doc:Pipe conveys fluid into an equipment
is:[^pipeSectionType]
lib:^lib:phIoT
---
def:^enthalpy
doc:"Total heat content of a system. It is defined as internal energy of the system plus the product of pressure and volume."
is:[^quantity]
lib:^lib:phScience
prefUnit:["kJ/kg","BTU/lb"]
quantityOf:[^air]
---
def:^entity
doc:
  Top-level dicts with a unique identifier.
  See `docHaystack::Ontology#entities` chapter.
is:[^marker]
lib:^lib:ph
---
def:^enum
doc:
  Defines an eumeration of string key names.  The range may also be applied
  to format a Bool ordered as "false,true".  The string value of this tag
  may be formatted in one of four ways:
   - dict of dicts keyed by name and Dict values for meta such as 'doc' tag
   - comma separated names on one line
   - names separated by a "\n" newline character
   - markdown unordered list formatted as a series of "- name: description\n"
  
  Enum names *should* follow valid tag naming rules (start with lowercase
  ASCII letter and contain only ASCII letters and numbers).  However in
  cases where mapping directly to external enumerations enum names can
  contain arbitrary characters such as space.
is:[^str,^dict]
lib:^lib:ph
tagOn:[^def,^point]
---
children:[{equip},{point}]
def:^equip
doc:
  Equipment asset.
  See `docHaystack::Equips` chapter.
docTaxonomy
is:[^entity]
lib:^lib:phIoT
mandatory
---
def:^equipFunction
doc:Models one of the primary functions of an equipment type
is:[^choice]
lib:^lib:phIoT
of:^phenomenon
---
containedBy:^equip
def:^equipRef
doc:Reference to equip which contains this entity
is:[^ref]
lib:^lib:phIoT
of:^equip
tagOn:[^controller,^equip,^point]
---
children:[{equip},{point}]
def:^escalator
doc:"Moving staircase used to move people between floors."
is:[^verticalTransport,^elec-input]
lib:^lib:phIoT
moves:^occupants
wikipedia:`https://en.wikipedia.org/wiki/Escalator`
---
def:^evaporator
doc:"Mechanism used to convert a refrigerant from its liquid to gaseous state."
is:[^marker]
lib:^lib:phIoT
---
def:^exhaust
doc:Duct used to expel air back outside
is:[^ductSectionType]
lib:^lib:phIoT
---
def:^export
doc:Supplied out of a system
is:[^marker]
lib:^lib:phIoT
---
def:^extraction
doc:Taking a substance out of another substance
is:[^marker]
lib:^lib:phIoT
---
def:^faceBypass
doc:
  Point of an ahu indicating air flow is by-passing the heating/cooling
  coils. If a boolean point, then true indicates the unit is in by-pass
  mode and false indicates by-pass is disabled. If the point is an analog
  point then 100% indicates full by-pass mode and 0% indicates by-pass is
  completely disabled.
is:[^marker]
lib:^lib:phIoT
---
def:^fan
doc:Fan equipment or control point
is:[^marker]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Fan_(machine)`
---
children:[{alarm sensor point},{enable cmd point},{enable sensor point},{equip},{point},{run cmd point},{run sensor point},{vfd freq cmd point},{vfd freq sensor point},{vfd speed cmd point},{vfd speed sensor point}]
childrenFlatten:[^ductSectionType,^fan]
def:^fan-motor
doc:
  Motor used with a fan to create air flow.
  See `docHaystack::Motors` chapter.
ductSection:^ductSectionType
is:[^motor]
lib:^lib:phIoT
moves:^air
wikipedia:`https://en.wikipedia.org/wiki/Fan_(machine)`
---
def:^fanPowered
doc:Device with a fan
is:[^marker]
lib:^lib:phIoT
---
ahuZoneDelivery:^ahuZoneDeliveryType
airVolumeAdjustability:^airVolumeAdjustabilityType
children:[{bypass damper cmd point},{cool cmd point},{dessicantDehumidifier cmd point},{discharge duct equip},{economizer duct equip},{economizing cmd point},{equip},{exhaust duct equip},{faceBypass cmd point},{filter sensor point},{freezeStat sensor point},{heat cmd point},{heatWheel cmd point},{humidifier equip},{hvacMode sp point},{mixed duct equip},{outside duct equip},{point},{return duct equip},{thermostat equip},{ventilation duct equip}]
coolingProcess:^coolingProcessType
cools:^air
def:^fcu
dehumidifies:^air
doc:
  Fan Coil Unit: A unitary, factory-made enclosure with a fan and coil
  that recirculates air in a space and performs one or more of the
  functions of cleaning, heating, cooling, humidifying, dehumidifying,
  or ventilating the air. Unit heaters are examples of FCUs.
  See `docHaystack::AHUs` chapter.
ductConfig:^ductConfigType
ductDeck:^ductDeckType
heatingProcess:^heatingProcessType
heats:^air
humidifies:^air
is:[^airHandlingEquip]
lib:^lib:phIoT
mandatory
ventilates:^air
wikipedia:`https://en.wikipedia.org/wiki/Fan_coil_unit`
---
def:^feature
doc:"Feature namespace of definitions formatted as 'feature:name'"
docTaxonomy
lib:^lib:ph
---
def:^feelsLike
doc:"Apparent temperature perceived when considering humidity, wind chill, and heat index"
is:[^quantity]
lib:^lib:phScience
prefUnit:["°C","°F"]
quantityOf:[^air]
---
def:^fileExt
doc:"Filename extension such as \"csv\""
is:[^str]
lib:^lib:ph
tagOn:[^filetype]
---
def:^filetype
doc:File format type definition
is:[^feature]
lib:^lib:ph
---
dis:CSV
def:^filetype:csv
doc:"Comma Separated Values - see `docHaystack::Csv`"
fileExt:csv
is:[^filetype]
lib:^lib:ph
mime:"text/csv"
wikipedia:`https://wikipedia.org/wiki/Comma-separated_values`
---
dis:JSON
def:^filetype:json
doc:"Haystack JavaScript Object Notation format - see `docHaystack::Json`"
fileExt:json
is:[^filetype]
lib:^lib:ph
mime:"application/json"
wikipedia:`https://wikipedia.org/wiki/JSON`
---
dis:JSON-LD
def:^filetype:jsonld
doc:"JavaScript Object Notation for Linked Data - see `docHaystack::Rdf`"
fileExt:jsonld
is:[^filetype]
lib:^lib:ph
mime:"application/ld+json"
wikipedia:`https://wikipedia.org/wiki/JSON-LD`
---
dis:Trio
def:^filetype:trio
doc:"Haystack Tag Record Input Output - see `docHaystack::Trio`"
fileExt:trio
is:[^filetype]
lib:^lib:ph
mime:"text/trio"
---
dis:Turtle
def:^filetype:turtle
doc:"RDF Turtle - see `docHaystack::Rdf`"
fileExt:ttl
is:[^filetype]
lib:^lib:ph
mime:"text/turtle"
wikipedia:`https://wikipedia.org/wiki/Turtle_(syntax)`
---
dis:"Zinc"
def:^filetype:zinc
doc:"Haystack typed CSV format - see `docHaystack::Zinc`"
fileExt:zinc
is:[^filetype]
lib:^lib:ph
mime:"text/zinc"
---
def:^filter
doc:"Related to an air or fluid filter."
is:[^marker]
lib:^lib:phIoT
---
def:^filterStr
doc:"Haystack filter string.  See `docHaystack::Filters`"
is:[^str]
lib:^lib:ph
---
children:[{equip},{point},{space}]
def:^floor
doc:"Storey of a building.  See `docHaystack::Spaces#floors` chapter."
is:[^space]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Storey`
---
def:^floorNum
doc:
  Unitless integer indicating the floor's distance from ground level.  The
  ground floor is always defined as zero.  Additional floors above ground are
  numbered 1, 2, 3, etc.  Subterranean floors are numbered -1, -2, -3, etc.
  This convention is consistent with how most European buildings number
  floors.  In North America its common to label the ground floor
  as the first floor; however Haystack requires the ground level to be
  assigned a floorNum of 0.
is:[^int]
lib:^lib:phIoT
tagOn:[^floor]
---
def:^flow
doc:Measure of volumetric flow of fluid
is:[^quantity]
lib:^lib:phScience
prefUnit:["m³/s","gal/min"]
quantityOf:[^fluid]
wikipedia:`https://en.wikipedia.org/wiki/Fluid_dynamics`
---
children:[{equip},{point}]
def:^flow-meter
doc:
  Meter to measure flow rate and total volume of fluid.
  See `docHaystack::Meters` chapter.
is:[^meter]
lib:^lib:phIoT
meterScope:^meterScopeType
---
children:[{equip},{point}]
def:^flowInverter
doc:System to change direction of substance flow 
is:[^equip]
lib:^lib:phIoT
---
def:^flue
doc:Duct for exhausting combustion
is:[^ductSectionType]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Flue`
---
def:^fluid
doc:Liquid or gas
is:[^substance]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Fluid`
---
def:^flux
doc:Measurement through a given surface
is:[^marker]
lib:^lib:phScience
---
def:^freezeStat
doc:
  A boolean point of an ahu indicating a freezing condition.  This
  might require a control sequence to protect the equipment. If true
  then a freeze condition is detected, or false if not.
is:[^marker]
lib:^lib:phIoT
---
def:^freq
doc:Occurrences per unit time
is:[^quantity]
lib:^lib:phScience
prefUnit:["Hz"]
---
def:^ftp
doc:File Transfer Protocol
is:[^protocol]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/File_Transfer_Protocol`
---
def:^fuelOil
doc:Petroleum based oil burned for energy
is:[^liquid]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Fuel_oil`
---
def:^fuelOil-input
doc:Entity inputs fuel oil which flows from another entity
is:[^input]
lib:^lib:phIoT
---
def:^fuelOil-output
doc:Entity outputs fuel oil to other entities
is:[^output]
lib:^lib:phIoT
---
def:^fuelOilHeating
doc:Heating by the combustion of fuel oil
is:[^heatingProcessType,^fuelOil-input]
lib:^lib:phIoT
---
def:^fuelOilRef
doc:Fuel oil flows from the referent to this entity
inputs:^fuelOil
is:[^ref]
lib:^lib:phIoT
of:^fuelOil-output
tagOn:[^fuelOil-input]
---
children:[{air flow sensor point},{air flow sensor sp point},{air velocity sensor point},{air velocity sp point},{alarm sensor point},{equip},{point}]
def:^fumeHood
doc:"Ventilation equipment to limit exposure to hazardous fumes."
is:[^equip,^elec-input]
lib:^lib:phIoT
ventilates:^air
wikipedia:`https://en.wikipedia.org/wiki/Fume_hood`
---
def:^gas
doc:Substance with neither definite volume nor shape
is:[^fluid]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Gas`
---
def:^gasoline
doc:Petroleum derived liquid used as a fuel source
is:[^liquid]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Gasoline`
---
def:^gasoline-input
doc:Entity inputs gasoline which flows from another entity
is:[^input]
lib:^lib:phIoT
---
def:^gasoline-output
doc:Entity outputs gasoline to other entities
is:[^output]
lib:^lib:phIoT
---
def:^gasolineRef
doc:Gasoline flows from the referent to this entity
inputs:^gasoline
is:[^ref]
lib:^lib:phIoT
of:^gasoline-output
tagOn:[^gasoline-input]
---
def:^geoAddr
doc:
  Free form street address.  Best practice is to follow local
  norms for a postal address.  Typically this string includes
  the `geoStreet`, `geoCity`, `geoState` (in US), and `geoPostalCode`:
  
  Examples:
    "1600 Pennsylvania Avenue NW, Washington, DC 20500"
  
    "10 Downing St, Westminster, London SW1A 2AA, United Kingdom"
  
    "Champ de Mars, 5 Avenue Anatole France, 75007 Paris, France"
is:[^str]
lib:^lib:ph
tagOn:[^geoPlace]
---
def:^geoCity
doc:Geographic city or locality name
is:[^str]
lib:^lib:ph
tagOn:[^geoPlace]
---
def:^geoCoord
doc:"Geographic coordinate as 'C(latitude,longitude)'"
is:[^coord]
lib:^lib:ph
tagOn:[^geoPlace]
---
def:^geoCountry
doc:
  Geographic country as [ISO 3166-1]`http://en.wikipedia.org/wiki/ISO_3166-1`
  two letter code
enum:
  - AF: Afghanistan
  - AX: Aland Islands
  - AL: Albania
  - DZ: Algeria
  - AS: American Samoa
  - AD: Andorra
  - AO: Angola
  - AI: Anguilla
  - AQ: Antarctica
  - AG: Antigua and Barbuda
  - AR: Argentina
  - AM: Armenia
  - AW: Aruba
  - AU: Australia
  - AT: Austria
  - AZ: Azerbaijan
  - BS: Bahamas
  - BH: Bahrain
  - BD: Bangladesh
  - BB: Barbados
  - BY: Belarus
  - BE: Belgium
  - BZ: Belize
  - BJ: Benin
  - BM: Bermuda
  - BT: Bhutan
  - BO: Bolivia, Plurinational State of
  - BO: Bolivia
  - BA: Bosnia and Herzegovina
  - BA: Bosnia
  - BA: Herzegovina
  - BW: Botswana
  - BV: Bouvet Island
  - BR: Brazil
  - IO: British Indian Ocean Territory
  - BN: Brunei Darussalam
  - BG: Bulgaria
  - BF: Burkina Faso
  - BI: Burundi
  - KH: Cambodia
  - CM: Cameroon
  - CA: Canada
  - CV: Cape Verde
  - KY: Cayman Islands
  - CF: Central African Republic
  - TD: Chad
  - CL: Chile
  - CN: China
  - CX: Christmas Island
  - CC: Cocos (keeling) Islands
  - CC: Cocos
  - CO: Colombia
  - KM: Comoros
  - CG: Congo
  - CD: Congo, the Democratic Republic of the
  - CK: Cook Islands
  - CR: Costa Rica
  - CI: Cote D'ivoire
  - HR: Croatia
  - CU: Cuba
  - CY: Cyprus
  - CZ: Czech Republic
  - DK: Denmark
  - DJ: Djibouti
  - DM: Dominica
  - DO: Dominican Republic
  - EC: Ecuador
  - EG: Egypt
  - SV: El Salvador
  - GQ: Equatorial Guinea
  - ER: Eritrea
  - EE: Estonia
  - ET: Ethiopia
  - FK: Falkland Islands (malvinas)
  - FK: Falkland Islands
  - FO: Faroe Islands
  - FJ: Fiji
  - FI: Finland
  - FR: France
  - GF: French Guiana
  - PF: French Polynesia
  - TF: French Southern Territories
  - GA: Gabon
  - GM: Gambia
  - GE: Georgia
  - DE: Germany
  - GH: Ghana
  - GI: Gibraltar
  - GR: Greece
  - GL: Greenland
  - GD: Grenada
  - GP: Guadeloupe
  - GU: Guam
  - GT: Guatemala
  - GG: Guernsey
  - GN: Guinea
  - GW: Guinea-bissau
  - GY: Guyana
  - HT: Haiti
  - HM: Heard Island and Mcdonald Islands
  - VA: Holy See (vatican City State)
  - VA: Vatican
  - HN: Honduras
  - HK: Hong Kong
  - HU: Hungary
  - IS: Iceland
  - IN: India
  - ID: Indonesia
  - IR: Iran, Islamic Republic of
  - IR: Iran
  - IQ: Iraq
  - IE: Ireland
  - IM: Isle of Man
  - IL: Israel
  - IT: Italy
  - JM: Jamaica
  - JP: Japan
  - JE: Jersey
  - JO: Jordan
  - KZ: Kazakhstan
  - KE: Kenya
  - KI: Kiribati
  - KP: Korea, Democratic People's Republic of
  - KR: Korea, Republic of
  - KR: Korea
  - KW: Kuwait
  - KG: Kyrgyzstan
  - LA: Lao People's Democratic Republic
  - LA: Lao
  - LV: Latvia
  - LB: Lebanon
  - LS: Lesotho
  - LR: Liberia
  - LY: Libyan Arab Jamahiriya
  - LI: Liechtenstein
  - LT: Lithuania
  - LU: Luxembourg
  - MO: Macao
  - MK: Macedonia, the Former Yugoslav Republic of
  - MK: Macedonia
  - MG: Madagascar
  - MW: Malawi
  - MY: Malaysia
  - MV: Maldives
  - ML: Mali
  - MT: Malta
  - MH: Marshall Islands
  - MQ: Martinique
  - MR: Mauritania
  - MU: Mauritius
  - YT: Mayotte
  - MX: Mexico
  - FM: Micronesia, Federated States of
  - FM: Micronesia
  - MD: Moldova, Republic of
  - MD: Moldova
  - MC: Monaco
  - MN: Mongolia
  - ME: Montenegro
  - MS: Montserrat
  - MA: Morocco
  - MZ: Mozambique
  - MM: Myanmar
  - NA: Namibia
  - NR: Nauru
  - NP: Nepal
  - NL: Netherlands
  - AN: Netherlands Antilles
  - NC: New Caledonia
  - NZ: New Zealand
  - NI: Nicaragua
  - NE: Niger
  - NG: Nigeria
  - NU: Niue
  - NF: Norfolk Island
  - MP: Northern Mariana Islands
  - NO: Norway
  - OM: Oman
  - PK: Pakistan
  - PW: Palau
  - PS: Palestinian Territory, Occupied
  - PS: Palestine
  - PA: Panama
  - PG: Papua New Guinea
  - PY: Paraguay
  - PE: Peru
  - PH: Philippines
  - PN: Pitcairn
  - PL: Poland
  - PT: Portugal
  - PR: Puerto Rico
  - QA: Qatar
  - RE: Reunion
  - RO: Romania
  - RU: Russian Federation
  - RW: Rwanda
  - BL: Saint Barthelemy
  - SH: Saint Helena, Ascension and Tristan Da Cunha
  - SH: Saint Helena
  - KN: Saint Kitts and Nevis
  - LC: Saint Lucia
  - MF: Saint Martin
  - PM: Saint Pierre and Miquelon
  - VC: Saint Vincent and the Grenadines
  - WS: Samoa
  - SM: San Marino
  - ST: Sao Tome and Principe
  - SA: Saudi Arabia
  - SN: Senegal
  - RS: Serbia
  - SC: Seychelles
  - SL: Sierra Leone
  - SG: Singapore
  - SK: Slovakia
  - SI: Slovenia
  - SB: Solomon Islands
  - SO: Somalia
  - ZA: South Africa
  - GS: South Georgia and the South Sandwich Islands
  - ES: Spain
  - LK: Sri Lanka
  - SD: Sudan
  - SR: Suriname
  - SJ: Svalbard and Jan Mayen
  - SZ: Swaziland
  - SE: Sweden
  - CH: Switzerland
  - SY: Syrian Arab Republic
  - TW: Taiwan, Province of China
  - TW: Taiwan
  - TJ: Tajikistan
  - TZ: Tanzania, United Republic of
  - TZ: Tanzania
  - TH: Thailand
  - TL: Timor-leste
  - TG: Togo
  - TK: Tokelau
  - TO: Tonga
  - TT: Trinidad and Tobago
  - TN: Tunisia
  - TR: Turkey
  - TM: Turkmenistan
  - TC: Turks and Caicos Islands
  - TV: Tuvalu
  - UG: Uganda
  - UA: Ukraine
  - AE: United Arab Emirates
  - GB: United Kingdom
  - GB: England
  - GB: Britain
  - GB: Great Britain
  - US: United States
  - US: United States of America
  - US: USA
  - UM: United States Minor Outlying Islands
  - UY: Uruguay
  - UZ: Uzbekistan
  - VU: Vanuatu
  - EE: Vatican City State See Holy
  - VE: Venezuela, Bolivarian Republic of
  - VE: Venezuela
  - VN: Viet Nam
  - VG: Virgin Islands, British
  - VI: Virgin Islands, U.S.
  - WF: Wallis and Futuna
  - EH: Western Sahara
  - YE: Yemen
  - ZM: Zambia
  - ZW: Zimbabwe
is:[^str]
lib:^lib:ph
tagOn:[^geoPlace]
---
def:^geoCounty
doc:Geographic subdivision of US state
is:[^str]
lib:^lib:ph
tagOn:[^geoPlace]
---
def:^geoElevation
doc:Elevation above sea-level of the location
is:[^number]
lib:^lib:ph
tagOn:[^geoPlace]
---
def:^geoPlace
doc:Geographic place
is:[^marker]
lib:^lib:ph
---
def:^geoPostalCode
doc:"Geographic postal code; for US this is a five digit zip code"
is:[^str]
lib:^lib:ph
tagOn:[^geoPlace]
---
def:^geoState
doc:
  State or province name; for US this is two letter state code. May be
  used in other countries to model administrative area between the geoCity
  and geoCountry level.
enum:
  - AL: Alabama
  - AK: Alaska
  - AS: American Samoa
  - AZ: Arizona
  - AR: Arkansas
  - CA: California
  - CO: Colorado
  - CT: Connecticut
  - DE: Delaware
  - DC: District of Columbia
  - FM: Federated States of Micronesia
  - FL: Florida
  - GA: Georgia
  - GU: Guam
  - HI: Hawaii
  - ID: Idaho
  - IL: Illinois
  - IN: Indiana
  - IA: Iowa
  - KS: Kansas
  - KY: Kentucky
  - LA: Louisiana
  - ME: Maine
  - MH: Marshall Islands
  - MD: Maryland
  - MA: Massachusetts
  - MI: Michigan
  - MN: Minnesota
  - MS: Mississippi
  - MO: Missouri
  - MT: Montana
  - NE: Nebraska
  - NV: Nevada
  - NH: New Hampshire
  - NJ: New Jersey
  - NM: New Mexico
  - NY: New York
  - NC: North Carolina
  - ND: North Dakota
  - MP: Northern Mariana Islands
  - OH: Ohio
  - OK: Oklahoma
  - OR: Oregon
  - PW: Palau
  - PA: Pennsylvania
  - PR: Puerto Rico
  - RI: Rhode Island
  - SC: South Carolina
  - SD: South Dakota
  - TN: Tennessee
  - TX: Texas
  - UT: Utah
  - VA: Virginia
  - VI: Virgin Islands
  - VT: Vermont
  - WA: Washington
  - WV: West Virginia
  - WI: Wisconsin
  - WY: Wyoming
is:[^str]
lib:^lib:ph
openEnum
tagOn:[^geoPlace]
---
def:^geoStreet
doc:Geographic street address and name
is:[^str]
lib:^lib:ph
tagOn:[^geoPlace]
---
def:^grid
doc:
  Two dimension table of columns and rows.
  See [Kinds chapter]`docHaystack::Kinds#grid`.
is:[^val]
lib:^lib:ph
---
def:^ground
doc:Related to the surface of the earth
is:[^marker]
lib:^lib:phIoT
---
children:[{equip},{point},{space}]
def:^ground-floor
doc:
  Floor at ground level.  In North America this is typically called
  the first floor, but in Europe its often labeled as floor zero.
  If `floorNum` is defined, then it must be set to zero.
is:[^floor]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Storey`
---
def:^ground-water
doc:Water present under the ground or from a well
is:[^water]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Groundwater`
---
def:^haystack
doc:Haystack HTTP protocol for exchanging tagged data
is:[^protocol]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Communication_protocol`
---
def:^header
doc:"Pipe used as central connection or manifold for other piping runs."
is:[^pipeSectionType]
lib:^lib:phIoT
---
def:^heat
doc:
  Associated with a heating process.  When used on a point,
  this tag is associated with the control of heating.
is:[^marker]
lib:^lib:phIoT
---
children:[{equip},{point}]
def:^heatExchanger
doc:"Equipment to transfer heat between two working fluids."
is:[^equip]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Heat_exchanger`
---
ahuZoneDelivery:^ahuZoneDeliveryType
airVolumeAdjustability:^airVolumeAdjustabilityType
children:[{bypass damper cmd point},{cool cmd point},{dessicantDehumidifier cmd point},{discharge duct equip},{economizer duct equip},{economizing cmd point},{equip},{exhaust duct equip},{faceBypass cmd point},{filter sensor point},{freezeStat sensor point},{heat cmd point},{heatWheel cmd point},{humidifier equip},{hvacMode sp point},{mixed duct equip},{outside duct equip},{point},{return duct equip},{thermostat equip},{ventilation duct equip}]
coolingProcess:^dxCooling
cools:^air
def:^heatPump
dehumidifies:^air
doc:
  Heat pump: An air handling equipment which employs a vapor compression
  cycle with a reversing valve to provide heating or cooling to a space.
  See `docHaystack::AHUs` chapter.
ductConfig:^ductConfigType
ductDeck:^ductDeckType
heatingProcess:^dxHeating
heats:^air
humidifies:^air
is:[^airHandlingEquip]
lib:^lib:phIoT
ventilates:^air
wikipedia:`https://en.wikipedia.org/wiki/Heat_pump`
---
def:^heatWheel
doc:"Boolean point indicating command state of AHU's heat wheel."
is:[^marker]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Thermal_wheel`
---
def:^heating
doc:Heating mode or process
is:[^marker]
lib:^lib:phIoT
---
children:[{equip},{hot water heat valve cmd point},{point},{stage:1 heat run cmd point},{steam heat valve cmd point}]
childrenFlatten:[^ductDeckType,^ductSectionType]
def:^heatingCoil
doc:"Coil used to heat air."
heatingProcess:^heatingProcessType
heats:^air
is:[^coil]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Heat_exchanger#HVAC_air_coils`
---
def:^heatingOnly
doc:Equipment without cooling
is:[^marker]
lib:^lib:phIoT
---
def:^heatingProcess
doc:Processed used to heat a substance
is:[^choice]
lib:^lib:phIoT
of:^heatingProcessType
---
def:^heatingProcessType
doc:Processed used to heat a substance
is:[^process]
lib:^lib:phIoT
---
def:^heats
doc:"Equipment heats a substance."
is:[^equipFunction]
lib:^lib:phIoT
of:^substance
---
def:^hfc
doc:Hydrofluorocarbons
is:[^gas]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Hydrofluorocarbon`
---
def:^hfc-emission
doc:"Greenhouse gas emission of hydrofluorocarbons into the air."
is:[^emission]
lib:^lib:phScience
prefUnit:["kg","ton","lb"]
quantityOf:[^air]
---
def:^his
doc:Supports historization of data
is:[^marker]
lib:^lib:phIoT
tagOn:[^point]
---
def:^his-point
doc:
  Historized point with a history log of timestamp/value pairs.  Points
  marked as historized indicate the system can response to queries via
  the 'hisRead' operation to return a trend log of timestamp/value pairs.
  
  There are typically two mechanisms for historization:
    - the local system performs the historization by logging the
      point's `curVal` to local storage
    - in overlay systems a downstream device performs the historization
      and the local system synchronizes the history data in batch on
      a periodic basis
  
  Also see `docHaystack::Points#his` chapter.
is:[^point]
lib:^lib:phIoT
pointFunction:^pointFunctionType
pointQuantity:^quantity
pointSubject:^phenomenon
---
def:^hisErr
doc:"Error description when `hisStatus` indicates error condition"
is:[^str]
lib:^lib:phIoT
tagOn:[^his-point]
transient
---
def:^hisMode
doc:"Indicates the way that history data is collected for a point."
enum:
  - sampled: Data is sampled on a regular interval. The timestamp
    indicates exactly when the sample was taken, and we assume linear
    interpolation between samples.
  - cov: Data is logged when it changes. The means the timestamp
    indicates exactly when it changed (inclusive) and it remains that
    value until the next sample's timestamp (exclusive).
  - consumption: Integral data is sampled on a regular interval and
    logged at the *end* of the interval. The timestamp indicates the
    *end* of the interval. Therefore, the raw data is logged as
    start *exclusive*, end *inclusive*.  This is mode is typical for
    consumption meters.
is:[^str]
lib:^lib:phIoT
tagOn:[^his-point]
---
def:^hisStatus
doc:"Status of point's history collection or synchronization"
enum:
  - ok: last sync attempt was successful
  - fault: a configuration problem - see `hisErr`
  - down: a communication or network problem - see `hisErr`
  - disabled: manual disable of the point or parent connector
  - unknown: we don't know anything (usually boot state)
  - pending: sync has been scheduled and is waiting to running
  - syncing: sync is currently running
is:[^str]
lib:^lib:phIoT
tagOn:[^his-point]
transient
---
def:^hisTotalized
doc:
  Indicates values which are a continuous stream of totalization. History
  data reads and should be normalized by computing the delta.
is:[^marker]
lib:^lib:phIoT
tagOn:[^his-point]
---
def:^hot
doc:Having high degree of heat
is:[^marker]
lib:^lib:phIoT
---
def:^hot-water
doc:Hot water used for HVAC heating or supplied to hot taps
is:[^water]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Water`
---
children:[{alarm sensor point},{circ pipe equip},{equip},{flue duct equip},{hot water entering pipe equip},{hot water leaving pipe equip},{makeup water entering pipe equip},{outside duct equip},{point}]
def:^hot-water-boiler
doc:Boiler which outputs hot water
heatingProcess:^heatingProcessType
heats:^hot-water
is:[^boiler,^hot-water-output]
lib:^lib:phIoT
produces:^hot-water
wikipedia:`https://en.wikipedia.org/wiki/Boiler`
---
def:^hot-water-input
doc:Entity inputs hot water which flows from another entity
is:[^input]
lib:^lib:phIoT
---
def:^hot-water-output
doc:Entity outputs hot water to other entities
is:[^output]
lib:^lib:phIoT
---
children:[{enable cmd point},{equip},{flue duct equip},{hot water boiler equip},{hot water bypass pipe equip},{hot water delta flow sensor point},{hot water delta pressure sensor point},{hot water delta temp sensor point},{hot water entering pipe equip},{hot water header pipe equip},{hot water heatExchanger equip},{hot water leaving pipe equip},{hot water mixing valve cmd point},{makeup water entering pipe equip},{outside duct equip},{point}]
def:^hot-water-plant
doc:
  Plant used to generate hot water for heating.
  See `docHaystack::Plants`.
is:[^plant,^hot-water-output]
lib:^lib:phIoT
produces:^hot-water
---
def:^hotDeck
doc:Duct carries air for heating
is:[^ductDeckType]
lib:^lib:phIoT
---
def:^hotWaterHeating
doc:Heating using energy of hot water
is:[^heatingProcessType,^hot-water-input]
lib:^lib:phIoT
---
def:^hotWaterRef
doc:Hot water flows from the referent to this entity
inputs:^hot-water
is:[^ref]
lib:^lib:phIoT
of:^hot-water-output
tagOn:[^hot-water-input]
---
def:^http
doc:Hypertext Transfer Protocol which is foundation of the web
is:[^protocol]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol`
---
def:^humidifier
doc:Adding moisture to air
is:[^marker]
lib:^lib:phIoT
---
children:[{equip},{humidifier enable cmd point},{humidifier run cmd point},{point}]
childrenFlatten:[]
def:^humidifier-equip
doc:Equipment which adds moisture to air to increase humidity
humidifies:^air
is:[^equip]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Humidifier`
---
def:^humidifies
doc:"Equipment adds moisture to air to increase humidity."
is:[^equipFunction]
lib:^lib:phIoT
of:^air
---
def:^humidity
doc:"Percent relative humidity; measure of moisture in the air"
is:[^quantity]
lib:^lib:phScience
prefUnit:["%RH"]
quantityOf:[^air]
---
def:^hvac
doc:"Heating, ventilation, and air conditioning"
is:[^marker]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/HVAC`
---
children:[{equip},{occupancy sensor point},{occupied sensor point},{occupied sp point},{point},{space},{zone air ch2o concentration sensor point},{zone air co concentration sensor point},{zone air co2 concentration sensor point},{zone air co2 concentration sp point},{zone air dewPoint sensor point},{zone air dewPoint sp point},{zone air enthalpy sensor point},{zone air enthalpy sp point},{zone air humidity sensor point},{zone air humidity sp point},{zone air hvacMode sp point},{zone air nh3 concentration sensor point},{zone air no2 concentration sensor point},{zone air o3 concentration sensor point},{zone air pm01 concentration sensor point},{zone air pm10 concentration sensor point},{zone air pm25 concentration sensor point},{zone air pressure sensor point},{zone air pressure sp point},{zone air temp effective sp point},{zone air temp occ cooling sp point},{zone air temp occ heating sp point},{zone air temp sensor point},{zone air temp standby cooling sp point},{zone air temp standby heating sp point},{zone air temp unocc cooling sp point},{zone air temp unocc heating sp point},{zone air tvoc concentration sensor point}]
def:^hvac-zone-space
doc:
  Zone related to conditioning of a space's air temperature and quality.
  See `docHaystack::Spaces#zones` and `docHaystack::Zones#hvac` chapters.
is:[^zone-space,^hvacZonePoints,^airQualityZonePoints,^air-input]
lib:^lib:phIoT
---
def:^hvacMode
doc:Operational mode for HVAC equipment
enum:
  - cooling:
  - heating:
  - reheat:
  - warmup: morning warmup where AHU is supplying warm air
  - purge: night purge when AHU is supplying 100% fresh air
  - pressurize:
  - depressurize:
  - manual:
is:[^marker]
lib:^lib:phIoT
---
children:[{zone air hvacMode sp point},{zone air temp sensor point},{zone air temp effective sp point},{zone air temp occ cooling sp point},{zone air temp occ heating sp point},{zone air temp unocc cooling sp point},{zone air temp unocc heating sp point},{zone air temp standby cooling sp point},{zone air temp standby heating sp point},{zone air pressure sensor point},{zone air pressure sp point},{zone air humidity sensor point},{zone air humidity sp point},{zone air dewPoint sensor point},{zone air dewPoint sp point},{zone air enthalpy sensor point},{zone air enthalpy sp point}]
def:^hvacZonePoints
doc:
  Entity with logical grouping of zone HVAC air points.
  See `docHaystack::Zones#hvac` chapter.
is:[^pointGroup]
lib:^lib:phIoT
---
def:^ice
doc:Water in its solid form
is:[^solid]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Ice`
---
def:^id
doc:
  Defines the unique identifier of an entity in system using a `ref` value
  type. The scope of an entity is undefined, but must be unique with a
  given system or project. This identifier may be used by other entities
  for cross-referencing.  See `docHaystack::Ontology#entities` chapter.
is:[^ref]
lib:^lib:ph
tagOn:[^entity]
---
def:^illuminance
doc:
  Luminous flux hitting the inside of the sphere at a specific point.
  
  Also see [ies.org]`https://www.ies.org/definitions/illuminance/`
is:[^quantity]
lib:^lib:phScience
prefUnit:["lux","footcandle","phot"]
quantityOf:[^light]
wikipedia:`https://en.wikipedia.org/wiki/Illuminance`
---
def:^imap
doc:Internet Message Access Protocol for retrieving email
is:[^protocol]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Internet_Message_Access_Protocol`
---
def:^imbalance
doc:Lacking balance
is:[^marker]
lib:^lib:phIoT
---
def:^import
doc:Received into a system
is:[^marker]
lib:^lib:phIoT
---
def:^infiltration
doc:Permeation of a substance into another substance
is:[^marker]
lib:^lib:phIoT
---
def:^inlet
doc:Duct with air entering an equipment
is:[^ductSectionType]
lib:^lib:phIoT
---
def:^input
doc:Entity inputs a substance which flows from another entity
is:[^marker]
lib:^lib:ph
---
def:^inputs
doc:
  The entity inputs a substance from the referent.
  The value of this tag is what is received.
is:[^relationship]
lib:^lib:ph
reciprocalOf:^outputs
transitive
---
def:^int
doc:Unitless integer number
is:[^number]
lib:^lib:ph
---
def:^intensity
doc:Measure of an electromagnetic field
is:[^marker]
lib:^lib:phScience
---
def:^irradiance
doc:Energy received at a surface by area
is:[^quantity]
lib:^lib:phScience
---
def:^is
doc:
  Defines one or more supertypes of a subtyping relationship.
  See [Subtyping]`docHaystack::Subtyping` chapter.
is:[^association]
lib:^lib:ph
of:^symbol
tagOn:[^def]
---
def:^isolation
doc:Actuator used to isolate an equipment from a pipe or ductwork system
is:[^marker]
lib:^lib:phIoT
---
def:^kind
doc:"Kind name used before Haystack 4.0 to identity data types"
enum:
  - Marker: is-a label
  - Bool: true or false
  - NA: not available
  - Number: floating point with optional unit
  - Str: Unicode string
  - Uri: Universal resource identifier
  - Ref: reference to an entity
  - Date: an ISO 8601 date as year, month, day: 2011-06-07
  - Time: an ISO 8601 time as hour, minute, seconds: 09:51:27.354
  - DateTime: an ISO 8601 timestamp followed by timezone name
  - Coord: geographic coordinate in latitude/longitude formatted as C(lat,lng)
  - XStr: extended string with type name
  - List: ordered sequence
  - Dict: key/value map
  - Grid: two dimensional tabular data collection
is:[^str]
lib:^lib:ph
tagOn:[^point]
---
def:^knx
doc:KNX protocol commonly used for lighting systems
is:[^protocol]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/KNX_(standard)`
---
def:^laptop
doc:"Portable laptop computer."
is:[^computer]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Laptop`
---
def:^leaving
doc:Pipe conveys fluid out of an equipment
is:[^pipeSectionType]
lib:^lib:phIoT
---
def:^level
doc:
  Range from 0% to 100%.  When paired with a fluid this implies a fill
  level where 0% is empty and 100% is full.
is:[^quantity]
lib:^lib:phScience
prefUnit:["%"]
quantityOf:[^fluid]
---
def:^lib
doc:Library module of symbolic definitions
is:[^feature]
lib:^lib:ph
---
baseUri:`https://project-haystack.org/def/ph/`
def:^lib:ph
doc:Project Haystack core definitions
is:[^lib]
lib:^lib:ph
version:"3.9.10"
---
baseUri:`https://project-haystack.org/def/phIct/`
def:^lib:phIct
depends:[^lib:ph,^lib:phIoT]
doc:
  Project Haystack definitions for Information and Communications Technology.
  This includes microprocessor based hardware, software, and networking
  technologies.
is:[^lib]
lib:^lib:phIct
version:"3.9.10"
wikipedia:`https://en.wikipedia.org/wiki/Information_and_communications_technology`
---
baseUri:`https://project-haystack.org/def/phIoT/`
def:^lib:phIoT
depends:[^lib:ph,^lib:phScience]
doc:Project Haystack definitions for Internet of Things
is:[^lib]
lib:^lib:phIoT
version:"3.9.10"
wikipedia:`https://en.wikipedia.org/wiki/Internet_of_things`
---
baseUri:`https://project-haystack.org/def/phScience/`
def:^lib:phScience
depends:[^lib:ph]
doc:Project Haystack scientific definitions
is:[^lib]
lib:^lib:phScience
version:"3.9.10"
---
def:^light
doc:Electromagnetic radiation in the visible spectrum
is:[^phenomenon]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Light`
---
def:^light-level
doc:
  Sensed or controlled dimming level of electrical lighting.
  Level is measured as a percentage where 0% is off and 100%
  is full brightness.
is:[^level]
lib:^lib:phScience
prefUnit:["%"]
quantityOf:[^light]
---
def:^lighting
doc:Systems associated with illumination in the built environment
is:[^marker]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Lighting`
---
children:[{equip},{light illuminance sensor point},{light level sensor point},{light level sp point},{light luminous flux sensor point},{occupancy sensor point},{occupied sensor point},{occupied sp point},{point},{space}]
def:^lighting-zone-space
doc:
  Zone related to lighting system.
  See `docHaystack::Spaces#zones` and `docHaystack::Zones#lighting` chapters.
is:[^zone-space,^lightingZonePoints]
lib:^lib:phIoT
---
children:[{light level sensor point},{light level sp point},{light illuminance sensor point},{light luminous flux sensor point}]
def:^lightingZonePoints
doc:
  Entity with logical grouping of lighting points.
  See `docHaystack::Zones#lighting` chapter.
is:[^pointGroup]
lib:^lib:phIoT
---
def:^liquid
doc:Substance with definite volume but takes the shape of its container
is:[^fluid]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Liquid`
---
def:^list
doc:
  Ordered list of zero or more values.
  See [Kinds chapter]`docHaystack::Kinds#list`.
is:[^val]
lib:^lib:ph
---
def:^load
doc:
  Chiller point to command or measure the chiller's load as a percentage
  from "0%" to "100%". When paired with cmd this models the chiller's
  load limit. When paired with sensor this models the chiller's current
  load factor.
is:[^marker]
lib:^lib:phIoT
---
children:[{equip},{light illuminance sensor point},{light level sensor point},{light level sp point},{light luminous flux sensor point},{point}]
def:^luminaire
doc:Light fixture using electricity to provide illumination
is:[^equip,^lightingZonePoints,^elec-input]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Light_fixture`
---
def:^luminance
doc:
  Energy of light in a given direction.
  
  Also see [ies.org]`https://www.ies.org/definitions/luminance/`
is:[^quantity]
lib:^lib:phScience
prefUnit:["candelas_per_square_meter","candelas_per_square_foot"]
quantityOf:[^light]
wikipedia:`https://en.wikipedia.org/wiki/Luminance`
---
def:^luminous
doc:Relating to light as perceived by the eye
is:[^marker]
lib:^lib:phScience
---
def:^luminous-flux
doc:
  Total perceived light in all directions.
  
  Also see [ies.org]`https://www.ies.org/definitions/luminous-flux/`
is:[^quantity]
lib:^lib:phScience
prefUnit:["lumen"]
quantityOf:[^light]
wikipedia:`https://en.wikipedia.org/wiki/Luminous_flux`
---
def:^luminous-intensity
doc:
  Perceived light in a particular direction per unit solid angle.
  
  Also see [ies.org]`https://www.ies.org/definitions/luminous-intensity/`
is:[^quantity]
lib:^lib:phScience
prefUnit:["candela"]
quantityOf:[^light]
wikipedia:`https://en.wikipedia.org/wiki/Luminous_intensity`
---
def:^magnitude
doc:Size or extent
is:[^marker]
lib:^lib:phScience
---
def:^makeup
doc:Restore something missed or lost
is:[^marker]
lib:^lib:phIoT
---
def:^makeup-water
doc:"Water used used to makeup water loss through leaks, evaporation, or blowdown"
is:[^water]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Water`
---
def:^makeup-water-input
doc:Entity inputs makeup water which flows from another entity
is:[^input]
lib:^lib:phIoT
---
def:^makeup-water-output
doc:Entity outputs makeup water to other entities
is:[^output]
lib:^lib:phIoT
---
def:^makeupWaterRef
doc:Makeup water flows from the referent to this entity
inputs:^makeup-water
is:[^ref]
lib:^lib:phIoT
of:^makeup-water-output
tagOn:[^makeup-water-input]
---
def:^mandatory
doc:
  Requires that the marker be applied to dicts which use the marker's subtypes.
  This tag is typically applied to top-level entity tags such as 'equip'.
  For example if an instance is tagged with a subtype of 'equip' such
  as 'tank', then the instance must also include the 'equip' tag as a
  mandatory marker.
is:[^marker]
lib:^lib:ph
notInherited
tagOn:[^def]
---
def:^marker
doc:
  Marker labels a dict with typing information.
  See [Kinds chapter]`docHaystack::Kinds#marker`.
docTaxonomy
lib:^lib:ph
---
ahuZoneDelivery:^ahuZoneDeliveryType
airVolumeAdjustability:^airVolumeAdjustabilityType
children:[{bypass damper cmd point},{cool cmd point},{dessicantDehumidifier cmd point},{discharge duct equip},{economizer duct equip},{economizing cmd point},{equip},{exhaust duct equip},{faceBypass cmd point},{filter sensor point},{freezeStat sensor point},{heat cmd point},{heatWheel cmd point},{humidifier equip},{hvacMode sp point},{mixed duct equip},{outside duct equip},{point},{return duct equip},{thermostat equip},{ventilation duct equip}]
coolingProcess:^coolingProcessType
cools:^air
def:^mau
dehumidifies:^air
doc:
  Makeup Air Unit: A DOAS that provides make-up air for a separate, dedicated
  exhaust system. That is, this equip does not contain an exhaust air section.
  See `docHaystack::AHUs` chapter.
ductConfig:^ductConfigType
ductDeck:^ductDeckType
heatingProcess:^heatingProcessType
heats:^air
humidifies:^air
is:[^doas]
lib:^lib:phIoT
ventilates:^air
wikipedia:`https://en.wikipedia.org/wiki/Air_handler`
---
def:^max
doc:Maximum
is:[^marker]
lib:^lib:ph
---
def:^maxVal
doc:"Inclusive maximum for a numeric value."
is:[^number]
lib:^lib:ph
tagOn:[^def,^point]
---
children:[{equip},{point}]
def:^meter
doc:
  Equipment to meter a substance or phenomenon.
  See `docHaystack::Meters` chapter.
is:[^equip]
lib:^lib:phIoT
meterScope:^meterScopeType
---
def:^meterScope
doc:Classifies a meter as a main site meter or submeter
is:[^choice]
lib:^lib:phIoT
of:^meterScopeType
---
def:^meterScopeType
doc:Classifies a meter as a main site meter or submeter
is:[^marker]
lib:^lib:phIoT
---
def:^mime
doc:"Mime type formatted as type/subtype"
is:[^str]
lib:^lib:ph
tagOn:[^filetype]
---
def:^min
doc:Minimum
is:[^marker]
lib:^lib:ph
---
def:^minVal
doc:"Inclusive minimum for a numeric value."
is:[^number]
lib:^lib:ph
tagOn:[^def,^point]
---
def:^mixed
doc:Duct where fresh outside air and return air is mixed together
is:[^ductSectionType]
lib:^lib:phIoT
---
def:^mixing
doc:
  Three way valve which inputs two pipes and outputs a mixture
  between the two to a single output pipe.
is:[^marker]
lib:^lib:phIoT
---
def:^mobile
doc:"Relating to mobile phones, hand-held computers, and similar technology"
is:[^marker]
lib:^lib:phIct
---
def:^mobile-phone
doc:"Cellular phone providing telecommunication over radio links."
is:[^phone]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Mobile_phone`
---
def:^modbus
doc:"Register based communication protocol used with industrial devices."
is:[^protocol]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Modbus`
---
children:[{alarm sensor point},{enable cmd point},{enable sensor point},{equip},{point},{run cmd point},{run sensor point},{vfd freq cmd point},{vfd freq sensor point},{vfd speed cmd point},{vfd speed sensor point}]
def:^motor
doc:
  Equipment that converts electrical energy into mechanical energy.
  See `docHaystack::Motors` chapter.
is:[^equip,^elec-input]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Electric_motor`
---
def:^moves
doc:"Equipment moves a substance."
is:[^equipFunction]
lib:^lib:phIoT
of:^substance
---
children:[{equip},{point}]
def:^movingWalkway
doc:"Conveyor to move people across a horizontal or inclined plane."
is:[^verticalTransport,^elec-input]
lib:^lib:phIoT
moves:^occupants
wikipedia:`https://en.wikipedia.org/wiki/Moving_walkway`
---
def:^mqtt
doc:"Message Queuing Telemetry Transport publish/subscribe protocol"
is:[^protocol]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/MQTT`
---
def:^multiZone
doc:AHU discharge air is split into a duct per zone
is:[^ahuZoneDeliveryType]
lib:^lib:phIoT
---
def:^n2o
doc:"Nitrous oxide (N₂O)"
is:[^gas]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Nitrous_oxide`
---
def:^n2o-emission
doc:"Greenhouse gas emission of nitrous oxide (N₂O) into the air."
is:[^emission]
lib:^lib:phScience
prefUnit:["kg","ton","lb"]
quantityOf:[^air]
---
def:^na
doc:
  Not available used to indicate invalid or missing data.
  See [Kinds chapter]`docHaystack::Kinds#na`.
is:[^scalar]
lib:^lib:ph
---
def:^naturalGas
doc:
  Fossil fuel energy source consisting largely of methane and other hydrocarbons.
  
  The energy content of natural gas varies by region within a range determined
  on impurities in the gas.  You can find a table of these conversions
  [here]`https://en.wikipedia.org/wiki/Heat_of_combustion#Higher_heating_values_of_natural_gases_from_various_sources`
is:[^gas]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Natural_gas`
---
def:^naturalGas-input
doc:Entity inputs natural gas which flows from another entity
is:[^input]
lib:^lib:phIoT
---
def:^naturalGas-output
doc:Entity outputs natural gas to other entities
is:[^output]
lib:^lib:phIoT
---
def:^naturalGasHeating
doc:Heating by the combustion of natural gas
is:[^heatingProcessType,^naturalGas-input]
lib:^lib:phIoT
---
def:^naturalGasRef
doc:Natural gas flows from the referent to this entity
inputs:^naturalGas
is:[^ref]
lib:^lib:phIoT
of:^naturalGas-output
tagOn:[^naturalGas-input]
---
def:^net
doc:Difference between import and export
is:[^marker]
lib:^lib:phIoT
---
def:^network
doc:
  Logical communications network between two or more devices.
  See `docHaystack::Devices#networks` chapter.
is:[^entity]
lib:^lib:phIct
---
def:^networkRef
doc:"Associates a device which communicates on specific a network."
is:[^ref]
lib:^lib:phIct
of:^network
---
def:^networking
doc:Related to data communication networks
is:[^marker]
lib:^lib:phIct
---
def:^networking-device
doc:"Microprocessor device used to establish networks."
is:[^device]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Networking_hardware`
---
def:^networking-router
doc:"Networking device used to route data between different networks."
is:[^networking-device]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Router_(computing)`
---
def:^networking-switch
doc:"Networking device used to connect devices on the same network."
is:[^networking-device]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Network_switch`
---
def:^neutralDeck
doc:Duct carries air which by-passes both heating and cooling coils
is:[^ductDeckType]
lib:^lib:phIoT
---
def:^nf3
doc:"Nitrogen trifluoride (NF₃)"
is:[^gas]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Nitrogen_trifluoride`
---
def:^nf3-emission
doc:"Greenhouse gas emission of nitrogen trifluoride (NF₃) into the air."
is:[^emission]
lib:^lib:phScience
prefUnit:["kg","ton","lb"]
quantityOf:[^air]
---
def:^nh3
doc:"Ammonia (NH₃)"
is:[^gas]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Ammonia`
---
def:^nh3-concentration
doc:"Concentration of ammonia (NH₃) in the air"
is:[^airQuality]
lib:^lib:phScience
prefUnit:["µg/m³","ppb"]
quantityOf:[^air]
wikipedia:`https://en.wikipedia.org/wiki/Concentration`
---
def:^no2
doc:"Nitrogen dioxide (NO₂)"
is:[^gas]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Nitrogen_dioxide`
---
def:^no2-concentration
doc:"Concentration of nitrogen dioxide (NO₂) in the air"
is:[^airQuality]
lib:^lib:phScience
prefUnit:["µg/m³","ppb"]
quantityOf:[^air]
wikipedia:`https://en.wikipedia.org/wiki/Concentration`
---
def:^nodoc
doc:Undocumented and not officially supported
is:[^marker]
lib:^lib:ph
---
def:^nosrc
doc:Do not include source code in documentation
is:[^marker]
lib:^lib:ph
---
def:^notInherited
doc:
  Marker applied to a def to indicate that is not inherited into
  subtype definitions.
is:[^marker]
lib:^lib:ph
tagOn:[^def]
---
def:^number
doc:
  Integer or floating point numbers annotated with an optional unit.
  See [Kinds chapter]`docHaystack::Kinds#number`.
is:[^scalar]
lib:^lib:ph
---
def:^o2
doc:"Oxygen (O₂) - the common dioxygen allotrope in the air"
is:[^gas]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Oxygen`
---
def:^o3
doc:"Ozone (O₃)"
is:[^gas]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Ozone`
---
def:^o3-concentration
doc:"Concentration of ozone (O₃) in the air"
is:[^airQuality]
lib:^lib:phScience
prefUnit:["ppm"]
quantityOf:[^air]
wikipedia:`https://en.wikipedia.org/wiki/Concentration`
---
def:^obix
doc:"XML based Open Building Information eXchange protocol."
is:[^protocol]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/OBIX`
---
def:^occ
doc:
  Occupied mode of a space.
  See `docHaystack::Zones#occupancy` chapter.
is:[^marker]
lib:^lib:phIoT
---
def:^occupancy
doc:
  Number of occupants in a space.
  See `docHaystack::Zones#occupancy` chapter.
is:[^marker]
lib:^lib:phIoT
---
def:^occupants
doc:
  People who use the built environment.
  See `docHaystack::Zones#occupancy` chapter.
is:[^marker]
lib:^lib:phIoT
---
def:^occupied
doc:
  Setpoint or sensor indicating occupancy of a space.
  See `docHaystack::Zones#occupancy` chapter.
is:[^marker]
lib:^lib:phIoT
---
def:^of
doc:"Expected value type of a collection, reference, or choice"
is:[^symbol]
lib:^lib:ph
tagOn:[^def]
---
def:^openEnum
doc:
  Apply to str enum tags where the enumeration range is open ended.
  User interfaces should support data entry for arbitrary strings, but
  also provide a dropdown for the predefined enumeration.
is:[^marker]
lib:^lib:ph
---
def:^output
doc:Entity outputs a substance with flows to other entities
is:[^marker]
lib:^lib:ph
---
def:^outputs
doc:
  The entity outputs a substance to the referent.
  The value of this tag is what is supplied.
is:[^relationship]
lib:^lib:ph
reciprocalOf:^inputs
transitive
---
def:^outside
doc:"Duct to access fresh outside air for both ventilation and economizer."
is:[^ductSectionType]
lib:^lib:phIoT
---
children:[{equip},{point}]
def:^panel
doc:
  Enclosure for electrical and control equipment.  Panels may be
  used to isolate electrical connections and provide environmental
  protection.
is:[^equip]
lib:^lib:phIoT
---
def:^parallel
doc:Circuit with multiple paths of flow
is:[^marker]
lib:^lib:phIoT
---
def:^perimeterHeat
doc:"Auxiliary heating points associated with a `vav`"
is:[^marker]
lib:^lib:phIoT
---
def:^pf
doc:
  Electrical power factor; unitless number between 0.0 and 1.0 which is ratio
  of active to apparent power in an AC power system.
is:[^quantity]
lib:^lib:phIoT
prefUnit:["pf"]
quantityOf:[^ac-elec]
---
def:^pfc
doc:Perfluorocarbons
is:[^gas]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Fluorocarbon`
---
def:^pfc-emission
doc:"Greenhouse gas emission of perfluorocarbons into the air."
is:[^emission]
lib:^lib:phScience
prefUnit:["kg","ton","lb"]
quantityOf:[^air]
---
def:^phase
doc:Phase measurement in a three-phase electrical system
enum:
  - A: line-to-neutral measurement
  - B: line-to-neutral measurement
  - C: line-to-neutral measurement
  - AB: line-to-line measurement
  - BC: line-to-line measurement
  - CA: line-to-line measurement
  - N: neutral current
is:[^str]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Three-phase_electric_power`
---
def:^phenomenon
doc:Aspect of scientific interest with measurable quantities
docTaxonomy
is:[^marker]
lib:^lib:phScience
---
def:^phone
doc:"Telephone used for voice telecommunication."
is:[^device]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Telephone`
---
children:[{equip},{flow sensor point},{flow sp point},{point},{pressure sensor point},{pressure sp point},{pump motor equip},{temp sensor point},{temp sp point},{valve actuator equip}]
childrenFlatten:[^fluid,^pipeSectionType,^plantLoopType]
conveys:^fluid
def:^pipe
doc:Conduit used to convey a fluid
is:[^conduit]
lib:^lib:phIoT
pipeSection:^pipeSectionType
plantLoop:^plantLoopType
wikipedia:`https://en.wikipedia.org/wiki/Pipe_(fluid_conveyance)`
---
def:^pipeSection
doc:Equipment section of piping
is:[^choice]
lib:^lib:phIoT
of:^pipeSectionType
---
def:^pipeSectionType
doc:Equipment section of piping
is:[^marker]
lib:^lib:phIoT
---
children:[{enable cmd point},{equip},{point}]
def:^plant
doc:
  Central plant used to generate a substance for a process.
  See `docHaystack::Plants`.
is:[^equip]
lib:^lib:phIoT
---
def:^plantLoop
doc:"Plant piping loop: primary, secondary, or tertiary"
is:[^choice]
lib:^lib:phIoT
of:^plantLoopType
---
def:^plantLoopType
doc:"Plant piping loop: primary, secondary, or tertiary"
is:[^marker]
lib:^lib:phIoT
---
def:^pm01
doc:"Particulate matter 0.1; atmospheric pollutant of fine particles with an aerodynamic diameter of 0.1 micrometers or less"
is:[^solid]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Particulates`
---
def:^pm01-concentration
doc:"Concentration of particulate matter 0.1 in the air."
is:[^airQuality]
lib:^lib:phScience
prefUnit:["µg/m³","ppb"]
quantityOf:[^air]
wikipedia:`https://en.wikipedia.org/wiki/Concentration`
---
def:^pm10
doc:"Particulate matter 10; atmospheric pollutant of fine particles with an aerodynamic diameter of 10 micrometers or less"
is:[^solid]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Particulates`
---
def:^pm10-concentration
doc:Concentration of particulate matter 10 in the air
is:[^airQuality]
lib:^lib:phScience
prefUnit:["µg/m³","ppb"]
quantityOf:[^air]
wikipedia:`https://en.wikipedia.org/wiki/Concentration`
---
def:^pm25
doc:"Particulate matter 2.5; atmospheric pollutant of fine particles with an aerodynamic diameter of 2.5 micrometers or less"
is:[^solid]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Particulates`
---
def:^pm25-concentration
doc:"Concentration of particulate matter 2.5 in the air."
is:[^airQuality]
lib:^lib:phScience
prefUnit:["µg/m³","ppb"]
quantityOf:[^air]
wikipedia:`https://en.wikipedia.org/wiki/Concentration`
---
def:^point
doc:
  Data point such as a sensor or actuator.
  See `docHaystack::Points` chapter.
docTaxonomy
is:[^entity]
lib:^lib:phIoT
mandatory
pointFunction:^pointFunctionType
pointQuantity:^quantity
pointSubject:^phenomenon
---
def:^pointFunction
doc:
  Classifies the point as a sensor, command, or setpoint.
  See `docHaystack::Points#function` chapter.
is:[^choice]
lib:^lib:phIoT
of:^pointFunctionType
---
def:^pointFunctionType
doc:
  Classifies the point as a sensor, command, or setpoint.
  See `docHaystack::Points#function` chapter.
is:[^marker]
lib:^lib:phIoT
---
def:^pointGroup
doc:Grouping of children points used by spaces and equipment
is:[^entity]
lib:^lib:phIoT
---
def:^pointQuantity
doc:Quantity the point senses or controls
is:[^choice]
lib:^lib:phIoT
of:^quantity
---
def:^pointSubject
doc:What the point senses or controls
is:[^choice]
lib:^lib:phIoT
of:^phenomenon
---
def:^pop3
doc:Post Office Protocol version 3 for retrieving email
is:[^protocol]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Post_Office_Protocol`
---
def:^power
doc:Energy consumed per unit time
is:[^quantity]
lib:^lib:phScience
---
def:^precipitation
doc:"Amount of atmospheric water vapor fallen including rain, sleet, snow, and hail"
is:[^quantity]
lib:^lib:phScience
prefUnit:["mm","in"]
quantityOf:[^weather]
---
def:^prefUnit
doc:Defines a preferred unit to be used with a quantity
is:[^list]
lib:^lib:phScience
of:^unit
---
def:^pressure
doc:Measure of force applied
is:[^quantity]
lib:^lib:phScience
prefUnit:["kPa","psi"]
quantityOf:[^fluid]
wikipedia:`https://en.wikipedia.org/wiki/Pressure`
---
def:^pressureDependent
doc:
  VAV damper modulates to control space temp; dependent on duct pressure
  being maintained
is:[^vavModulationType]
lib:^lib:phIoT
---
def:^pressureIndependent
doc:
  VAV damper or a control valve that modulates to maintain desired flow
  setpoint; independent of the duct pressure
is:[^vavModulationType]
lib:^lib:phIoT
---
def:^primaryFunction
doc:Primary function of building as US Energy Star key
enum:
  Adult Education
  Ambulatory Surgical Center
  Aquarium
  Automobile Dealership
  Bank Branch
  Bar/Nightclub
  Barracks
  Bowling Alley
  Casino
  College/University
  Convenience Store with Gas Station
  Convenience Store without Gas Station
  Convention Center
  Courthouse
  Data Center
  Distribution Center
  Drinking Water Treatment & Distribution
  Enclosed Mall
  Energy/Power Station
  Fast Food Restaurant
  Financial Office
  Fire Station
  Fitness Center/Health Club/Gym
  Food Sales
  Food Service
  Hospital (General Medical & Surgical)
  Hotel
  Ice/Curling Rink
  Indoor Arena
  K-12 School
  Laboratory
  Library
  Lifestyle Center
  Mailing Center/Post Office
  Manufacturing/Industrial Plant
  Medical Office
  Mixed Use Property
  Movie Theater
  Multifamily Housing
  Museum
  Non-Refrigerated Warehouse
  Office
  Other - Education
  Other - Entertainment/Public Assembly
  Other - Lodging/Residential
  Other - Mall
  Other - Public Services
  Other - Recreation
  Other - Restaurant/Bar
  Other - Services
  Other - Stadium
  Other - Technology/Science
  Other - Utility
  Other
  Other/Specialty Hospital
  Outpatient Rehabilitation/Physical Therapy
  Parking
  Performing Arts
  Personal Services (Health/Beauty, Dry Cleaning, etc)
  Police Station
  Pre-school/Daycare
  Prison/Incarceration
  Race Track
  Refrigerated Warehouse
  Repair Services (Vehicle, Shoe, Locksmith, etc)
  Residence Hall/Dormitory
  Restaurant
  Retail Store
  Roller Rink
  Self-Storage Facility
  Senior Care Community
  Single Family Home
  Social/Meeting Hall
  Stadium (Closed)
  Stadium (Open)
  Strip Mall
  Supermarket/Grocery Store
  Swimming Pool
  Transportation Terminal/Station
  Urgent Care/Clinic/Other Outpatient
  Veterinary Office
  Vocational School
  Wastewater Treatment Plant
  Wholesale Club/Supercenter
  Worship Facility
  Zoo
is:[^str]
lib:^lib:phIoT
tagOn:[^site]
---
def:^primaryLoop
doc:
  Pipework which circulates closest to the energy source.  In a central
  plant, the primary loop indicates the pipes and equipment within the
  central plant.  In context of heat exchangers between the primary
  and secondary loops, this tag indicates the side closest to the plant.
is:[^plantLoopType]
lib:^lib:phIoT
---
def:^process
doc:Industrial or HVAC process
docTaxonomy
is:[^marker]
lib:^lib:phIoT
---
def:^produces
doc:"Equipment produces a substance or phenomenon."
is:[^equipFunction]
lib:^lib:phIoT
of:^phenomenon
---
def:^protocol
doc:"Communication protocol used for devices on a network."
docTaxonomy
is:[^marker]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Communication_protocol`
---
def:^pump
doc:Pump equipment or control point
is:[^marker]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Pump`
---
children:[{alarm sensor point},{enable cmd point},{enable sensor point},{equip},{point},{run cmd point},{run sensor point},{vfd freq cmd point},{vfd freq sensor point},{vfd speed cmd point},{vfd speed sensor point}]
childrenFlatten:[^fluid,^pipeSectionType,^pump]
def:^pump-motor
doc:
  Motor used with a pump to move fluid.
  See `docHaystack::Motors` chapter.
is:[^motor]
lib:^lib:phIoT
moves:^fluid
pipeSection:^pipeSectionType
wikipedia:`https://en.wikipedia.org/wiki/Pump`
---
def:^purge
doc:
  Associated with a cleaning process to remove contaminants.
  Most commonly it indicates purging water or air by using a filter or by
  letting out a certain amount of the substance at a high flow rate.
is:[^marker]
lib:^lib:phIoT
---
def:^purge-water
doc:"Water expelled from a system to remove contaminants."
is:[^water]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Water`
---
def:^quality
doc:Quantity measured against standard metric
is:[^marker]
lib:^lib:phScience
---
computed
def:^quantities
doc:Quantities used to measure this phenomenon
docAssociations
is:[^association]
lib:^lib:phScience
of:^symbol
reciprocalOf:^quantityOf
---
def:^quantity
doc:Measurable property of a substance or phenomenon
docTaxonomy
is:[^marker]
lib:^lib:phScience
---
def:^quantityOf
doc:Associates quantity as measurement of a phenomenon
is:[^association]
lib:^lib:phScience
of:^phenomenon
reciprocalOf:^quantities
---
children:[{equip},{networking device},{point},{server device}]
def:^rack
doc:
  Enclosure or chassis used to mount computer and networking gear.
  Devices are mounted to rails of a standard width, typically 19 or 23
  inches.  Height is measured in *rack units* where one 1U is 1.75 inches.
  A full rack has a height of 42U.
  See `docHaystack::DataCenters#racks` chapter.
is:[^equip]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/19-inch_rack`
---
children:[{equip},{point}]
def:^radiantEquip
doc:"HVAC equipment that conditions a space without forced air."
is:[^equip]
lib:^lib:phIoT
---
children:[{equip},{point}]
def:^radiantFloor
doc:"Heats a space using pipes or cables embedded beneath floor."
heatingProcess:^heatingProcessType
heats:^air
is:[^radiantEquip]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Underfloor_heating`
---
children:[{equip},{point}]
def:^radiator
doc:
  Heats a space using exposed pipes or coils.  Hot water and steam
  radiators are often cast iron and installed directly in the space
  or along the baseboard.  Electric radiators are typically installed
  on the baseboard.
heatingProcess:^heatingProcessType
heats:^air
is:[^radiantEquip]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Radiator_(heating)`
---
def:^reactive
doc:Relating to reactance
is:[^marker]
lib:^lib:phIoT
---
def:^reactive-energy
doc:"Integral of `reactive-power` over time"
is:[^quantity]
lib:^lib:phIoT
quantityOf:[^ac-elec]
---
def:^reactive-power
doc:"Reactive power or imaginary power; energy transfer that contributes useful work"
is:[^quantity]
lib:^lib:phIoT
prefUnit:["kVAR"]
quantityOf:[^ac-elec]
---
def:^reciprocal
doc:Piston compressor driven by a crankshaft
is:[^marker]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Reciprocating_compressor`
---
def:^reciprocalOf
doc:
  Specifies the inverse of an association or relationships.
  See [Associations]`docHaystack::Associations#reciprocalOf` and
  [Relationships]`docHaystack::Relationships#reciprocalOf` chapter.
is:[^symbol]
lib:^lib:ph
---
def:^ref
doc:
  Reference to an entity. Ref values are ASCII strings limited to the
  following chars: a-z, A-Z, 0-9, underbar, colon, dash, dot, or tilde.
  See [Kinds chapter]`docHaystack::Kinds#ref`.
is:[^scalar]
lib:^lib:ph
---
def:^refrig
doc:
  Fluid used in refrigeration and heat exchange.  Refrigerants typically
  alternate between liquid and gas state.
is:[^fluid]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Refrigerant`
---
def:^refrig-input
doc:Entity inputs refrigerant which flows from another entity
is:[^input]
lib:^lib:phIoT
---
def:^refrig-output
doc:Entity outputs refrigerant to other entities
is:[^output]
lib:^lib:phIoT
---
def:^refrigRef
doc:Refrigerant flows from the referent to this entity
inputs:^refrig
is:[^ref]
lib:^lib:phIoT
of:^refrig-output
tagOn:[^refrig-input]
---
def:^regulates
doc:"Equipment regulates the flow of substance or phenomenon."
is:[^equipFunction]
lib:^lib:phIoT
of:^phenomenon
---
def:^reheat
doc:"Command point for `reheats` process"
is:[^marker]
lib:^lib:phIoT
---
def:^reheats
doc:"Equipment heats a substance previously cooled or heated."
is:[^heats]
lib:^lib:phIoT
of:^substance
---
def:^relationship
doc:
  Ref tags used to model entity-to-entity relationships.
  See [Relationships]`docHaystack::Relationships` chapter.
docTaxonomy
is:[^symbol]
lib:^lib:ph
---
def:^remove
doc:
  Singleton for remove operation.
  See [Kinds chapter]`docHaystack::Kinds#remove`.
is:[^scalar]
lib:^lib:ph
---
def:^return
doc:Duct returning air back to equipment
is:[^ductSectionType]
lib:^lib:phIoT
---
def:^roof
doc:Envelope covering the top of a building
is:[^marker]
lib:^lib:phIoT
---
children:[{equip},{point},{space}]
def:^roof-floor
doc:
  The roof floor is the topmost level of a building.  It is often
  where HVAC equipment is located such as rooftop AHUs.
is:[^floor]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Storey`
---
children:[{space},{equip},{point}]
def:^room
doc:Enclosed room of a building
is:[^space]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Room`
---
def:^rotaryScrew
doc:Rotary screw compression
is:[^marker]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Rotary-screw_compressor`
---
def:^router
doc:Device used to route data packets
is:[^marker]
lib:^lib:phIct
---
ahuZoneDelivery:^ahuZoneDeliveryType
airVolumeAdjustability:^airVolumeAdjustabilityType
children:[{bypass damper cmd point},{cool cmd point},{dessicantDehumidifier cmd point},{discharge duct equip},{economizer duct equip},{economizing cmd point},{equip},{exhaust duct equip},{faceBypass cmd point},{filter sensor point},{freezeStat sensor point},{heat cmd point},{heatWheel cmd point},{humidifier equip},{hvacMode sp point},{mixed duct equip},{outside duct equip},{point},{return duct equip},{thermostat equip},{ventilation duct equip}]
coolingProcess:^coolingProcessType
cools:^air
def:^rtu
dehumidifies:^air
doc:
  Roof Top Unit: A unitary AHU that is weatherized for outdoor use.
  See `docHaystack::AHUs` chapter.
ductConfig:^ductConfigType
ductDeck:^ductDeckType
heatingProcess:^heatingProcessType
heats:^air
humidifies:^air
is:[^ahu]
lib:^lib:phIoT
ventilates:^air
wikipedia:`https://en.wikipedia.org/wiki/Air_handler`
---
def:^run
doc:
  Primary on/off `point` of an `equip` especially used with a `vfd`.
  Run is used with Bool points where true indicates on and false indicates
  off. When paired with `cmd` this is the commanded state of the equipment.
  When paired with `sensor` this is the actual status of the equip.  If
  the equipment also defines an `enable` point then both must be commanded
  on in order to run the equipment.
is:[^marker]
lib:^lib:phIoT
---
def:^scalar
doc:Scalar is an atomic value kind
is:[^val]
lib:^lib:ph
---
def:^secondaryLoop
doc:
  Pipework which circulates closest to the building or end use. In a
  central plant, the secondary loop indicates the pipes and equipment between
  the central plant and the building.  In context of heat exchangers between
  the primary and secondary loops, this tag indicates the side closest to
  the building.
is:[^plantLoopType]
lib:^lib:phIoT
---
def:^sensor
doc:
  Point is a sensor, input, AI/BI.
  See `docHaystack::Points#function` chapter.
is:[^pointFunctionType]
lib:^lib:phIoT
---
def:^series
doc:Circuit with single path of flow
is:[^marker]
lib:^lib:phIoT
---
def:^server
doc:"Hardware or software which provides services for other programs or devices."
is:[^marker]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Server_(computing)`
---
def:^server-computer
doc:"General purpose computer used as a server.  Typically servers are rack mounted."
is:[^computer]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Server_(computing)`
---
def:^sf6
doc:"Sulphur hexafluoride (SF₆)"
is:[^gas]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Sulfur_hexafluoride`
---
def:^sf6-emission
doc:"Greenhouse gas emission of sulphur hexafluoride (SF₆) into the air."
is:[^emission]
lib:^lib:phScience
prefUnit:["kg","ton","lb"]
quantityOf:[^air]
---
def:^singleDuct
doc:One single duct
is:[^ductConfigType]
lib:^lib:phIoT
---
children:[{space},{equip}]
def:^site
doc:
  Site is a geographic location of the built environment.
  Typically site maps to one building with its own unique
  street address.  See `docHaystack::Sites` chapter.
docTaxonomy
is:[^entity,^geoPlace]
lib:^lib:phIoT
mandatory
---
def:^siteMeter
doc:Main meter for the associated site
is:[^meterScopeType]
lib:^lib:phIoT
---
containedBy:^site
def:^siteRef
doc:Reference to site which contains the entity
is:[^ref]
lib:^lib:phIoT
of:^site
tagOn:[^space,^equip,^point]
---
def:^smtp
doc:Simple Mail Transfer Protocol for sending email
is:[^protocol]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol`
---
def:^snmp
doc:Simple Network Management Protocol for managing IP devices
is:[^protocol]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Simple_Network_Management_Protocol`
---
def:^solar
doc:Relating to energy from the sun
is:[^phenomenon]
lib:^lib:phScience
---
def:^solar-irradiance
doc:Energy received on surface of the earth from the sun
is:[^irradiance]
lib:^lib:phScience
prefUnit:["W/m²"]
quantityOf:[^solar]
---
def:^solid
doc:Substance with definite shape and volume
is:[^substance]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Solid`
---
def:^sox
doc:Sedona Framework UDP based communication protocol
is:[^protocol]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Communication_protocol`
---
def:^sp
doc:
  Point is a setpoint, soft point, internal control variable, schedule.
  See `docHaystack::Points#function` chapter.
is:[^pointFunctionType]
lib:^lib:phIoT
---
children:[{space},{equip},{point}]
def:^space
doc:
  Space is a three-dimensional volume in the built environment.
  See `docHaystack::Spaces` chapter.
docTaxonomy
is:[^entity]
lib:^lib:phIoT
mandatory
---
containedBy:^space
def:^spaceRef
doc:Reference to space which contains this entity
is:[^ref]
lib:^lib:phIoT
of:^space
tagOn:[^space,^equip,^point]
---
def:^speed
doc:Distance per unit time
is:[^quantity]
lib:^lib:phScience
prefUnit:["km/h","mph"]
---
def:^stage
doc:
  Stage number of staged equipment operation such as coil or pump.
  The first stage is 1, second stage 2, etc.
is:[^int]
lib:^lib:phIoT
minVal:1
---
def:^standby
doc:Readiness mode of a space
is:[^marker]
lib:^lib:phIoT
---
def:^steam
doc:Water in its gas form
is:[^gas]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Steam`
---
children:[{alarm sensor point},{circ pipe equip},{condensate entering pipe equip},{equip},{flue duct equip},{makeup water entering pipe equip},{outside duct equip},{point},{steam leaving pipe equip}]
def:^steam-boiler
doc:Boiler which outputs steam
heatingProcess:^heatingProcessType
heats:^steam
is:[^boiler,^steam-output]
lib:^lib:phIoT
produces:^steam
wikipedia:`https://en.wikipedia.org/wiki/Boiler`
---
def:^steam-input
doc:Entity inputs steam which flows from another entity
is:[^input]
lib:^lib:phIoT
---
def:^steam-output
doc:Entity outputs steam to other entities
is:[^output]
lib:^lib:phIoT
---
children:[{condensate entering pipe equip},{enable cmd point},{equip},{flue duct equip},{makeup water entering pipe equip},{outside duct equip},{point},{steam boiler equip},{steam bypass pipe equip},{steam delta flow sensor point},{steam delta pressure sensor point},{steam delta temp sensor point},{steam header pipe equip},{steam heatExchanger equip},{steam leaving pipe equip},{steam mixing valve cmd point}]
def:^steam-plant
doc:
  Plant used to generate steam for heating.
  See `docHaystack::Plants`.
is:[^plant,^steam-output]
lib:^lib:phIoT
produces:^steam
---
def:^steamHeating
doc:Heating using energy of steam
is:[^heatingProcessType,^steam-input]
lib:^lib:phIoT
---
def:^steamRef
doc:Steam flows from the referent to this entity
inputs:^steam
is:[^ref]
lib:^lib:phIoT
of:^steam-output
tagOn:[^steam-input]
---
def:^stores
doc:"Equipment stores a substance or phenomenon."
is:[^equipFunction]
lib:^lib:phIoT
of:^phenomenon
---
def:^str
doc:
  Unicode string of characters.
  See [Kinds chapter]`docHaystack::Kinds#str`.
is:[^scalar]
lib:^lib:ph
---
def:^submeter
doc:Submeters measure usage of a sub-system or equipment within a site
is:[^meterScopeType]
lib:^lib:phIoT
---
def:^submeterOf
doc:Reference to parent meter which is immediately upstream of this meter
is:[^ref]
lib:^lib:phIoT
of:^meter
tagOn:[^meter]
---
def:^substance
doc:"Matter in one the three states solid, liquid, or gas"
is:[^phenomenon]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Matter`
---
def:^subterranean
doc:Below the surface of the earth
is:[^marker]
lib:^lib:phIoT
---
children:[{equip},{point},{space}]
def:^subterranean-floor
doc:
  Floor below ground level.  Subterranean floors are also known as
  basements, lower levels, or cellars.
is:[^floor]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Storey`
---
def:^switch
doc:Device for toggling state or routing data
is:[^marker]
lib:^lib:phIoT
---
def:^symbol
doc:
  Symbol to a def. Symbol values are ASCII strings limited to the
  following chars: a-z, A-Z, 0-9, underbar, colon, dash, dot.
  See [Kinds chapter]`docHaystack::Kinds#symbol`.
is:[^scalar]
lib:^lib:ph
---
def:^tablet
doc:"Mobile device with touch screen for user input."
is:[^device]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Tablet_computer`
---
accumulate
def:^tagOn
doc:This tag is used on the given entity
is:[^association]
lib:^lib:ph
notInherited
of:^symbol
reciprocalOf:^tags
tagOn:[^def]
---
computed
def:^tags
doc:Tags used with this entity
docAssociations
is:[^association]
lib:^lib:ph
of:^symbol
reciprocalOf:^tagOn
---
children:[{equip},{level sensor point},{point},{pressure sensor point},{temp sensor point}]
childrenFlatten:[^substance]
def:^tank
doc:Tank used to store a substance for temporary holding
is:[^equip]
lib:^lib:phIoT
stores:^substance
wikipedia:`https://en.wikipedia.org/wiki/Storage_tank`
---
def:^temp
doc:Temperature - measure of hot and cold
is:[^quantity]
lib:^lib:phScience
prefUnit:["°C","°F"]
quantityOf:[^substance]
wikipedia:`https://en.wikipedia.org/wiki/Temperature`
---
def:^tertiaryLoop
doc:"Pipework which circulates within the building."
is:[^plantLoopType]
lib:^lib:phIoT
---
def:^thd
doc:Total harmonic distortion
is:[^marker]
lib:^lib:phIoT
---
def:^thermal
doc:Related to energy of heat
is:[^marker]
lib:^lib:phIoT
---
children:[{equip},{point},{zone air dewPoint sensor point},{zone air dewPoint sp point},{zone air enthalpy sensor point},{zone air enthalpy sp point},{zone air humidity sensor point},{zone air humidity sp point},{zone air hvacMode sp point},{zone air pressure sensor point},{zone air pressure sp point},{zone air temp effective sp point},{zone air temp occ cooling sp point},{zone air temp occ heating sp point},{zone air temp sensor point},{zone air temp standby cooling sp point},{zone air temp standby heating sp point},{zone air temp unocc cooling sp point},{zone air temp unocc heating sp point}]
def:^thermostat
doc:
  Senses and controls temperature of space in HVAC system.  Thermostats
  may provide an interface for setpoint control.
is:[^equip,^hvacZonePoints]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Thermostat`
---
def:^time
doc:
  ISO 8601 time as hour, minute, seconds: '09:51:27.354'.
  See [Kinds chapter]`docHaystack::Kinds#time`.
is:[^scalar]
lib:^lib:ph
---
def:^total
doc:Complete or absolute
is:[^marker]
lib:^lib:phScience
---
def:^transient
doc:
  Indicates a value tag which should not be persisted.  Transient
  values often change frequently and do not provide long term informational
  value. Typyically they are stored only in RAM and should not be stored
  to durable storage.
is:[^marker]
lib:^lib:ph
tagOn:[^def]
---
def:^transitive
doc:
  This marker is applied to a `relationship` to indicate it is transitive.
  Transitivity requires that if the relationship applies to A,B and B,C
  then it also applies to A,C.
is:[^marker]
lib:^lib:ph
---
def:^tripleDuct
doc:"Three ducts: hotDeck, coldDeck, or neutralDeck"
is:[^ductConfigType]
lib:^lib:phIoT
---
def:^tvoc
doc:"Total volatile organic compound (TVOC)."
is:[^gas]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Volatile_organic_compound`
---
def:^tvoc-concentration
doc:"Concentration of total volatile organic compounds (TVOC) in the air"
is:[^airQuality]
lib:^lib:phScience
prefUnit:["µg/m³","ppb"]
quantityOf:[^air]
wikipedia:`https://en.wikipedia.org/wiki/Concentration`
---
def:^tz
doc:"Timezone identifier from standard [timezone database]`docHaystack::TimeZones`"
enum:
  Abidjan
  Accra
  Adak
  Adelaide
  Algiers
  Almaty
  Amman
  Amsterdam
  Anadyr
  Anchorage
  Andorra
  Apia
  Aqtau
  Aqtobe
  Araguaina
  Ashgabat
  Astrakhan
  Asuncion
  Athens
  Atikokan
  Atyrau
  Auckland
  Azores
  Baghdad
  Bahia
  Bahia_Banderas
  Baku
  Bangkok
  Barbados
  Barnaul
  Beirut
  Belem
  Belgrade
  Belize
  Berlin
  Bermuda
  Beulah
  Bishkek
  Bissau
  Blanc-Sablon
  Boa_Vista
  Bogota
  Boise
  Bougainville
  Brisbane
  Broken_Hill
  Brunei
  Brussels
  Bucharest
  Budapest
  Buenos_Aires
  CET
  CST6CDT
  Cairo
  Cambridge_Bay
  Campo_Grande
  Canary
  Cancun
  Cape_Verde
  Caracas
  Casablanca
  Casey
  Catamarca
  Cayenne
  Center
  Ceuta
  Chagos
  Chatham
  Chicago
  Chihuahua
  Chisinau
  Chita
  Choibalsan
  Christmas
  Chuuk
  Cocos
  Colombo
  Copenhagen
  Cordoba
  Costa_Rica
  Creston
  Cuiaba
  Curacao
  Currie
  Damascus
  Danmarkshavn
  Darwin
  Davis
  Dawson
  Dawson_Creek
  Denver
  Detroit
  Dhaka
  Dili
  Dubai
  Dublin
  DumontDUrville
  Dushanbe
  EET
  EST
  EST5EDT
  Easter
  Edmonton
  Efate
  Eirunepe
  El_Aaiun
  El_Salvador
  Enderbury
  Eucla
  Fakaofo
  Famagusta
  Faroe
  Fiji
  Fort_Nelson
  Fortaleza
  Funafuti
  GMT
  GMT+1
  GMT+10
  GMT+11
  GMT+12
  GMT+2
  GMT+3
  GMT+4
  GMT+5
  GMT+6
  GMT+7
  GMT+8
  GMT+9
  GMT-1
  GMT-10
  GMT-11
  GMT-12
  GMT-13
  GMT-14
  GMT-2
  GMT-3
  GMT-4
  GMT-5
  GMT-6
  GMT-7
  GMT-8
  GMT-9
  Galapagos
  Gambier
  Gaza
  Gibraltar
  Glace_Bay
  Godthab
  Goose_Bay
  Grand_Turk
  Guadalcanal
  Guam
  Guatemala
  Guayaquil
  Guyana
  HST
  Halifax
  Havana
  Hebron
  Helsinki
  Hermosillo
  Ho_Chi_Minh
  Hobart
  Hong_Kong
  Honolulu
  Hovd
  Indianapolis
  Inuvik
  Iqaluit
  Irkutsk
  Istanbul
  Jakarta
  Jamaica
  Jayapura
  Jerusalem
  Johannesburg
  Juba
  Jujuy
  Juneau
  Kabul
  Kaliningrad
  Kamchatka
  Karachi
  Kathmandu
  Kerguelen
  Khandyga
  Khartoum
  Kiev
  Kiritimati
  Kirov
  Knox
  Kolkata
  Kosrae
  Krasnoyarsk
  Kuala_Lumpur
  Kuching
  Kwajalein
  La_Paz
  La_Rioja
  Lagos
  Lima
  Lindeman
  Lisbon
  London
  Lord_Howe
  Los_Angeles
  Louisville
  Luxembourg
  MET
  MST
  MST7MDT
  Macau
  Maceio
  Macquarie
  Madeira
  Madrid
  Magadan
  Mahe
  Majuro
  Makassar
  Maldives
  Malta
  Managua
  Manaus
  Manila
  Maputo
  Marengo
  Marquesas
  Martinique
  Matamoros
  Mauritius
  Mawson
  Mazatlan
  Melbourne
  Mendoza
  Menominee
  Merida
  Metlakatla
  Mexico_City
  Minsk
  Miquelon
  Monaco
  Moncton
  Monrovia
  Monterrey
  Montevideo
  Monticello
  Moscow
  Nairobi
  Nassau
  Nauru
  Ndjamena
  New_Salem
  New_York
  Nicosia
  Nipigon
  Niue
  Nome
  Norfolk
  Noronha
  Noumea
  Novokuznetsk
  Novosibirsk
  Ojinaga
  Omsk
  Oral
  Oslo
  PST8PDT
  Pago_Pago
  Palau
  Palmer
  Panama
  Pangnirtung
  Paramaribo
  Paris
  Perth
  Petersburg
  Phoenix
  Pitcairn
  Pohnpei
  Pontianak
  Port-au-Prince
  Port_Moresby
  Port_of_Spain
  Porto_Velho
  Prague
  Puerto_Rico
  Punta_Arenas
  Pyongyang
  Qatar
  Qostanay
  Qyzylorda
  Rainy_River
  Rankin_Inlet
  Rarotonga
  Recife
  Regina
  Rel
  Resolute
  Reunion
  Reykjavik
  Riga
  Rio_Branco
  Rio_Gallegos
  Riyadh
  Rome
  Rothera
  Sakhalin
  Salta
  Samara
  Samarkand
  San_Juan
  San_Luis
  Santarem
  Santiago
  Santo_Domingo
  Sao_Paulo
  Sao_Tome
  Saratov
  Scoresbysund
  Seoul
  Shanghai
  Simferopol
  Singapore
  Sitka
  Sofia
  South_Georgia
  Srednekolymsk
  St_Johns
  Stanley
  Stockholm
  Swift_Current
  Sydney
  Syowa
  Tahiti
  Taipei
  Tallinn
  Tarawa
  Tashkent
  Tbilisi
  Tegucigalpa
  Tehran
  Tell_City
  Thimphu
  Thule
  Thunder_Bay
  Tijuana
  Tirane
  Tokyo
  Tomsk
  Tongatapu
  Toronto
  Tripoli
  Troll
  Tucuman
  Tunis
  UTC
  Ulaanbaatar
  Ulyanovsk
  Urumqi
  Ushuaia
  Ust-Nera
  Uzhgorod
  Vancouver
  Vevay
  Vienna
  Vilnius
  Vincennes
  Vladivostok
  Volgograd
  Vostok
  WET
  Wake
  Wallis
  Warsaw
  Whitehorse
  Winamac
  Windhoek
  Winnipeg
  Yakutat
  Yakutsk
  Yangon
  Yekaterinburg
  Yellowknife
  Yerevan
  Zaporozhye
  Zurich
is:[^str]
lib:^lib:ph
tagOn:[^point,^site,^weatherStation]
---
def:^unit
doc:Unit identifier from standard unit database
enum:
  - %: percent (dimensionless)
  - px: pixel (dimensionless)
  - db: decibel (dimensionless)
  - pf: power_factor (dimensionless)
  - pH: ph (dimensionless)
  - %RH: percent_relative_humidity (dimensionless)
  - gH₂O/kgAir: grams_of_water_per_kilogram_dry_air (dimensionless)
  - V/K: volts_per_degree_kelvin (dimensionless)
  - °daysC: degree_days_celsius (dimensionless)
  - °daysF: degree_days_fahrenheit (dimensionless)
  - %obsc/ft: percent_obscuration_per_foot (dimensionless)
  - %obsc/m: percent_obscuration_per_meter (dimensionless)
  - psi/°F: psi_per_degree_fahrenheit (dimensionless)
  - m²/N: square_meters_per_newton (dimensionless)
  - W/m²K: watts_per_square_meter_degree_kelvin (dimensionless)
  - dBmV: db_millivolt (dimensionless)
  - dBµV: db_microvolt (dimensionless)
  - ppu: parts_per_unit (dimensionless)
  - ppm: parts_per_million (dimensionless)
  - ppb: parts_per_billion (dimensionless)
  - g/kg: grams_per_kilogram (dimensionless)
  - rad: radian (dimensionless)
  - deg: degrees_angular (dimensionless)
  - degPh: degrees_phase (dimensionless)
  - sr: steradian (dimensionless)
  - ntu: nephelometric_turbidity_units (dimensionless)
  - fnu: formazin_nephelometric_unit (dimensionless)
  - PUE: power_usage_effectiveness (dimensionless)
  - DCIE: data_center_infrastructure_efficiency (dimensionless)
  - Af: afghani (currency)
  - DZD: algerian_dinar (currency)
  - ARS: argentine_peso (currency)
  - Դ: armenian_dram (currency)
  - ƒ: aruban_guilder_florin (currency)
  - AUD: australian_dollar (currency)
  - ман: azerbaijanian_manat (currency)
  - BSD: bahamian_dollar (currency)
  - BHD: bahraini_dinar (currency)
  - ฿: baht (currency)
  - PAB: balboa (currency)
  - BBD: barbados_dollar (currency)
  - Br: belarussian_ruble (currency)
  - BZD: belize_dollar (currency)
  - BMD: bermudian_dollar (currency)
  - VEF: bolivar_fuerte (currency)
  - BOB: boliviano (currency)
  - R$: brazilian_real (currency)
  - BND: brunei_dollar (currency)
  - лв: bulgarian_lev (currency)
  - BIF: burundi_franc (currency)
  - CAD: canadian_dollar (currency)
  - CVE: cape_verde_escudo (currency)
  - KYD: cayman_islands_dollar (currency)
  - ₵: cedi (currency)
  - XAF: cfa_franc_bceao (currency)
  - XPF: cfp_franc (currency)
  - CLP: chilean_peso (currency)
  - 元: chinese_yuan (currency)
  - CDF: congolese_franc (currency)
  - C$: cordoba_oro (currency)
  - ₡: costa_rican_colon (currency)
  - Kn: croatian_kuna (currency)
  - CUP: cuban_peso (currency)
  - Kč: czech_koruna (currency)
  - GMD: dalasi (currency)
  - kr: danish_krone (currency)
  - ден: denar (currency)
  - DJF: djibouti_franc (currency)
  - Db: dobra (currency)
  - DOP: dominican_peso (currency)
  - ₫: dong (currency)
  - XCD: east_caribbean_dollar (currency)
  - EGP: egyptian_pound (currency)
  - ETB: ethiopian_birr (currency)
  - €: euro (currency)
  - FKP: falkland_islands_pound (currency)
  - FJD: fiji_dollar (currency)
  - HUF: forint (currency)
  - GIP: gibraltar_pound (currency)
  - HTG: gourde (currency)
  - ₲: guarani (currency)
  - GNF: guinea_franc (currency)
  - GYD: guyana_dollar (currency)
  - HKD: hong_kong_dollar (currency)
  - ₴: hryvnia (currency)
  - Kr: iceland_krona (currency)
  - ₹: indian_rupee (currency)
  - IRR: iranian_rial (currency)
  - IQD: iraqi_dinar (currency)
  - JMD: jamaican_dollar (currency)
  - JOD: jordanian_dinar (currency)
  - Sh: kenyan_shilling (currency)
  - PGK: kina (currency)
  - ₭: kip (currency)
  - КМ: konvertibilna_marka (currency)
  - KWD: kuwaiti_dinar (currency)
  - MK: kwacha (currency)
  - Kz: kwanza (currency)
  - MMK: kyat (currency)
  - ლ: lari (currency)
  - LBP: lebanese_pound (currency)
  - ALL: lek (currency)
  - HNL: lempira (currency)
  - Le: leone (currency)
  - RON: leu (currency)
  - LRD: liberian_dollar (currency)
  - LYD: libyan_dinar (currency)
  - SZL: lilangeni (currency)
  - LSL: loti (currency)
  - MGA: malagasy_ariary (currency)
  - RM: malaysian_ringgit (currency)
  - TMT: manat (currency)
  - MUR: mauritius_rupee (currency)
  - MTn: metical (currency)
  - MXN: mexican_peso (currency)
  - MDL: moldavian_leu (currency)
  - MAD: moroccan_dirham (currency)
  - ₦: naira (currency)
  - Nfk: nakfa (currency)
  - NAD: namibia_dollar (currency)
  - NPR: nepalese_rupee (currency)
  - ₪: new_israeli_shekel (currency)
  - NZD: new_zealand_dollar (currency)
  - BTN: ngultrum (currency)
  - KPW: north_korean_won (currency)
  - NOK: norwegian_krone (currency)
  - PEN: nuevo_sol (currency)
  - UM: ouguiya (currency)
  - ₨: pakistan_rupee (currency)
  - MOP: pataca (currency)
  - UYU: peso_uruguayo (currency)
  - ₱: philippine_peso (currency)
  - £: pound_sterling (currency)
  - BWP: pula (currency)
  - zł: pzloty (currency)
  - QAR: qatari_rial (currency)
  - GTQ: quetzal (currency)
  - ZAR: rand (currency)
  - OMR: rial_omani (currency)
  - KHR: riel (currency)
  - MVR: rufiyaa (currency)
  - Rp: rupiah (currency)
  - RUB: russian_ruble (currency)
  - RWF: rwanda_franc (currency)
  - SHP: saint_helena_pound (currency)
  - SAR: saudi_riyal (currency)
  - din: serbian_dinar (currency)
  - SCR: seychelles_rupee (currency)
  - SGD: singapore_dollar (currency)
  - SBD: solomon_islands_dollar (currency)
  - KGS: som (currency)
  - SOS: somali_shilling (currency)
  - ЅМ: somoni (currency)
  - ₩: south_korean_won (currency)
  - Rs: sri_lanka_rupee (currency)
  - SDG: sudanese_pound (currency)
  - SRD: suriname_dollar (currency)
  - SEK: swedish_krona (currency)
  - SFr: swiss_franc (currency)
  - SYP: syrian_pound (currency)
  - TWD: taiwan_dollar (currency)
  - ৳: taka (currency)
  - WST: tala (currency)
  - TZS: tanzanian_shilling (currency)
  - 〒: tenge (currency)
  - TTD: trinidad_and_tobago_dollar (currency)
  - ₮: tugrik (currency)
  - TND: tunisian_dinar (currency)
  - ₤: turkish_lira (currency)
  - AED: uae_dirham (currency)
  - UGX: uganda_shilling (currency)
  - $: us_dollar (currency)
  - UZS: uzbekistan_sum (currency)
  - Vt: vatu (currency)
  - YER: yemeni_rial (currency)
  - ¥: yen (currency)
  - ZK: zambian_kwacha (currency)
  - ZWL: zimbabwe_dollar (currency)
  - m/s²: meters_per_second_squared (acceleration)
  - rad/s²: radians_per_second_squared (angular acceleration)
  - Js: joule_second (angular momentum)
  - rad/s: radians_per_second (angular velocity)
  - rpm: revolutions_per_minute (angular velocity)
  - m²: square_meter (area)
  - mm²: square_millimeter (area)
  - cm²: square_centimeter (area)
  - km²: square_kilometer (area)
  - in²: square_inch (area)
  - ft²: square_foot (area)
  - yd²: square_yard (area)
  - mile²: square_mile (area)
  - acre: acre (area)
  - F: farad (capacitance)
  - COP: coefficient_of_performance (cooling efficiency)
  - EER: energy_efficiency_ratio (cooling efficiency)
  - kW/ton: kilowatt_per_ton (cooling efficiency)
  - kg/m³: kilograms_per_cubic_meter (density)
  - g/m³: grams_per_cubic_meter (density)
  - mg/m³: milligrams_per_cubic_meter (density)
  - µg/m³: micrograms_per_cubic_meter (density)
  - C: coulomb (electric charge)
  - Ah: ampere_hour (electric charge)
  - S: siemens (electric conductance)
  - A: ampere (electric current)
  - mA: milliampere (electric current)
  - Am²: ampere_square_meter (electromagnetic moment)
  - A/m²: amperes_per_square_meter (electric current density)
  - V/m: volts_per_meter (electric field strength)
  - V: volt (electric potential)
  - mV: millivolt (electric potential)
  - kV: kilovolt (electric potential)
  - MV: megavolt (electric potential)
  - Ω: ohm (electric resistance)
  - kΩ: kilohm (electric resistance)
  - MΩ: megohm (electric resistance)
  - mΩ: milliohm (electric resistance)
  - S/m: siemens_per_meter (electrical conductivity)
  - Ωm: ohm_meter (electrical resistivity)
  - J: joule (energy)
  - kJ: kilojoule (energy)
  - Wh: watt_hour (energy)
  - kWh: kilowatt_hour (energy)
  - MWh: megawatt_hour (energy)
  - BTU: btu (energy)
  - kBTU: kilobtu (energy)
  - MMBTU: megabtu (energy)
  - hph: horsepower_hour (energy)
  - cal: calorie (energy)
  - therm: therm (energy)
  - tonrefh: tons_refrigeration_hour (energy)
  - MJ: megajoule (energy)
  - GJ: gigajoule (energy)
  - Nm: newton_meter (energy)
  - m³_gas: cubic_meters_natural_gas (energy)
  - ft³_gas: cubic_feet_natural_gas (energy)
  - hundred_cubic_feet_natural_gas: hundred_cubic_feet_natural_gas (energy)
  - thousand_cubic_feet_natural_gas: thousand_cubic_feet_natural_gas (energy)
  - million_cubic_feet_natural_gas: million_cubic_feet_natural_gas (energy)
  - VAh: volt_ampere_hour (apparent energy)
  - kVAh: kilovolt_ampere_hour (apparent energy)
  - MVAh: megavolt_ampere_hour (apparent energy)
  - VARh: volt_ampere_reactive_hour (reactive energy)
  - kVARh: kilovolt_ampere_reactive_hour (reactive energy)
  - MVARh: megavolt_ampere_reactive_hour (reactive energy)
  - J/m²: joules_per_square_meter (energy by area)
  - Wh/m²: watt_hours_per_square_meter (energy by area)
  - Wh/ft²: watt_hours_per_square_foot (energy by area)
  - kWh/m²: kilowatt_hours_per_square_meter (energy by area)
  - kWh/ft²: kilowatt_hours_per_square_foot (energy by area)
  - MWh/m²: megawatt_hours_per_square_meter (energy by area)
  - MWh/ft²: megawatt_hours_per_square_foot (energy by area)
  - MJ/m²: megajoules_per_square_meter (energy by area)
  - MJ/ft²: megajoules_per_square_foot (energy by area)
  - kBTU/ft²: kilobtu_per_square_foot (energy by area)
  - MBTU/ft²: megabtu_per_square_foot (energy by area)
  - J/g: joules_per_gram (enthalpy)
  - J/kg: joules_per_kilogram (enthalpy)
  - J/kg_dry: joules_per_kilogram_dry_air (enthalpy)
  - BTU/lb: btu_per_pound (enthalpy)
  - btu/lb_dry: btus_per_pound_dry_air (enthalpy)
  - kJ/kg: kilojoules_per_kilogram (enthalpy)
  - kJ/kg_dry: kilojoules_per_kilogram_dry_air (enthalpy)
  - MJ/kg_dry: megajoules_per_kilogram_dry_air (enthalpy)
  - cal/g: calorie_per_gram (enthalpy)
  - J/°K: joules_per_degree_kelvin (entropy)
  - kJ/°K: kilojoules_per_degree_kelvin (entropy)
  - MJ/°K: megajoules_per_degree_kelvin (entropy)
  - N: newton (force)
  - lbf: pound_force (force)
  - Hz: hertz (frequency)
  - kHz: kilohertz (frequency)
  - cph: cycles_per_hour (frequency)
  - cpm: cycles_per_minute (frequency)
  - MHz: megahertz (frequency)
  - /min: per_minute (frequency)
  - /s: per_second (frequency)
  - /h: per_hour (frequency)
  - %/s: percent_per_second (frequency)
  - ACH: air_changes_per_hour (frequency)
  - kg/m²: kilograms_per_square_meter (grammage)
  - g/m²: grams_per_square_meter (grammage)
  - K/s: degrees_kelvin_per_second (heating rate)
  - °C/h: degrees_celsius_per_hour (heating rate)
  - °C/min: degrees_celsius_per_minute (heating rate)
  - °F/h: degrees_fahrenheit_per_hour (heating rate)
  - °F/min: degrees_fahrenheit_per_minute (heating rate)
  - K/h: degrees_kelvin_per_hour (heating rate)
  - K/min: degrees_kelvin_per_minute (heating rate)
  - lx: lux (illuminance)
  - fc: footcandle (illuminance)
  - phot: phot (illuminance)
  - H: henry (inductance)
  - W/m²_irr: watts_per_square_meter_irradiance (irradiance)
  - W/ft²_irr: watts_per_square_foot_irradiance (irradiance)
  - m: meter (length)
  - µm: micrometer (length)
  - mm: millimeter (length)
  - cm: centimeter (length)
  - km: kilometer (length)
  - in: inch (length)
  - ft: foot (length)
  - yd: yard (length)
  - mile: mile (length)
  - cd/m²: candelas_per_square_meter (luminance)
  - cd/ft²: candels_per_square_foot (luminance)
  - lm: lumen (luminous flux)
  - cd: candela (luminous intensity)
  - A/m: amperes_per_meter (magnetic field strength)
  - Wb: weber (magnetic flux)
  - T: tesla (magnetic flux density)
  - kg: kilogram (mass)
  - mg: milligram (mass)
  - g: gram (mass)
  - oz: ounce (mass)
  - lb: pound (mass)
  - klb: kilopound (mass)
  - ton: metric_ton (mass)
  - t: short_ton (mass)
  - kg/s: kilograms_per_second (mass flow)
  - kg/min: kilograms_per_minute (mass flow)
  - kg/h: kilograms_per_hour (mass flow)
  - lb/min: pounds_per_minute (mass flow)
  - lb/h: pounds_per_hour (mass flow)
  - lb/s: pounds_per_second (mass flow)
  - klb/h: kilopounds_per_hour (mass flow)
  - g/s: grams_per_second (mass flow)
  - g/min: grams_per_minute (mass flow)
  - ton/h: metric_tons_per_hour (mass flow)
  - Ns: newton_second (momentum)
  - W: watt (power)
  - mW: milliwatt (power)
  - kW: kilowatt (power)
  - MW: megawatt (power)
  - GW: gigawatt (power)
  - BTU/h: btus_per_hour (power)
  - therm/h: therms_per_hour (power)
  - hp: horsepower (power)
  - ftlbs/sec: foot_pounds_per_second (power)
  - tonref: tons_refrigeration (power)
  - kBTU/h: kilobtus_per_hour (power)
  - MMBTU/h: megabtus_per_hour (power)
  - J/h: joules_per_hour (power)
  - kJ/h: kilojoules_per_hour (power)
  - MJ/h: megajoules_per_hour (power)
  - GJ/h: gigajoules_per_hour (power)
  - W/m²: watts_per_square_meter (power by area)
  - W/ft²: watts_per_square_foot (power by area)
  - kW/m²: kilowatts_per_square_meter (power by area)
  - kW/ft²: kilowatts_per_square_foot (power by area)
  - kBTU/h/ft²: kilobtus_per_hour_per_square_foot (power by area)
  - W/m³/s: watts_per_cubic_meters_per_second (power by volumetric flow)
  - W/cfm: watts_per_cubic_feet_per_minute (power by volumetric flow)
  - kW/kcfm: kilowatts_per_kilocubic_feet_per_minute (power by volumetric flow)
  - kW/gal/min: kilowatts_per_gallons_per_minute (power by volumetric flow)
  - VA: volt_ampere (apparent power)
  - kVA: kilovolt_ampere (apparent power)
  - mVA: megavolt_ampere (apparent power)
  - VAR: volt_ampere_reactive (reactive power)
  - kVAR: kilovolt_ampere_reactive (reactive power)
  - MVAR: megavolt_ampere_reactive (reactive power)
  - Pa: pascal (pressure)
  - kPa: kilopascal (pressure)
  - bar: bar (pressure)
  - atm: atmosphere (pressure)
  - psi: pounds_per_square_inch (pressure)
  - cmH₂O: centimeters_of_water (pressure)
  - inH₂O: inches_of_water (pressure)
  - mmHg: millimeters_of_mercury (pressure)
  - cmHg: centimeters_of_mercury (pressure)
  - inHg: inches_of_mercury (pressure)
  - hPa: hectopascal (pressure)
  - mbar: millibar (pressure)
  - J/kg°K: joules_per_kilogram_degree_kelvin (specific entropy)
  - N/m: newtons_per_meter (surface tension)
  - °F: fahrenheit (temperature)
  - °C: celsius (temperature)
  - K: kelvin (temperature)
  - Δ°F: fahrenheit_degrees (temperature differential)
  - Δ°C: celsius_degrees (temperature differential)
  - ΔK: kelvin_degrees (temperature differential)
  - W/m°K: watts_per_meter_degree_kelvin (thermal conductivity)
  - ns: nanosecond (time)
  - µs: microsecond (time)
  - ms: millisecond (time)
  - cs: hundredths_second (time)
  - ds: tenths_second (time)
  - s: second (time)
  - min: minute (time)
  - h: hour (time)
  - day: day (time)
  - wk: week (time)
  - mo: julian_month (time)
  - yr: year (time)
  - m/s: meters_per_second (velocity)
  - km/s: kilometers_per_second (velocity)
  - km/h: kilometers_per_hour (velocity)
  - mph: miles_per_hour (velocity)
  - ft/s: feet_per_second (velocity)
  - ft/min: feet_per_minute (velocity)
  - mm/s: millimeters_per_second (velocity)
  - mm/min: millimeters_per_minute (velocity)
  - m/min: meters_per_minute (velocity)
  - m/h: meters_per_hour (velocity)
  - knot: knot (velocity)
  - m³: cubic_meter (volume)
  - mm³: cubic_millimeter (volume)
  - cm³: cubic_centimeter (volume)
  - mL: milliliter (volume)
  - hL: hectoliter (volume)
  - L: liter (volume)
  - kL: kiloliter (volume)
  - in³: cubic_inch (volume)
  - ft³: cubic_foot (volume)
  - yd³: cubic_yard (volume)
  - gal: gallon (volume)
  - kgal: kilogallon (volume)
  - qt: quart (volume)
  - pt: pint (volume)
  - fl_oz: fluid_ounce (volume)
  - galUK: imperial_gallon (volume)
  - hft³: hecto_cubic_foot (volume)
  - m³/s: cubic_meters_per_second (volumetric flow)
  - mL/s: milliliters_per_second (volumetric flow)
  - hL/s: hectoliters_per_second (volumetric flow)
  - L/s: liters_per_second (volumetric flow)
  - cfs: cubic_feet_per_second (volumetric flow)
  - cfm: cubic_feet_per_minute (volumetric flow)
  - cfh: cubic_feet_per_hour (volumetric flow)
  - kcfm: kilocubic_feet_per_minute (volumetric flow)
  - galUK/min: imperial_gallons_per_minute (volumetric flow)
  - L/min: liters_per_minute (volumetric flow)
  - gal/min: gallons_per_minute (volumetric flow)
  - gph: gallons_per_hour (volumetric flow)
  - L/h: liters_per_hour (volumetric flow)
  - m³/min: cubic_meters_per_minute (volumetric flow)
  - m³/h: cubic_meters_per_hour (volumetric flow)
  - byte: byte (bytes)
  - kB: kilobyte (bytes)
  - MB: megabyte (bytes)
  - GB: gigabyte (bytes)
  - TB: terabyte (bytes)
  - PB: petabyte (bytes)
  
is:[^str]
lib:^lib:ph
tagOn:[^point]
---
ahuZoneDelivery:^ahuZoneDeliveryType
airVolumeAdjustability:^airVolumeAdjustabilityType
children:[{bypass damper cmd point},{cool cmd point},{dessicantDehumidifier cmd point},{discharge duct equip},{economizer duct equip},{economizing cmd point},{equip},{exhaust duct equip},{faceBypass cmd point},{filter sensor point},{freezeStat sensor point},{heat cmd point},{heatWheel cmd point},{humidifier equip},{hvacMode sp point},{mixed duct equip},{outside duct equip},{point},{return duct equip},{thermostat equip},{ventilation duct equip}]
coolingProcess:^coolingProcessType
cools:^air
def:^unitVent
dehumidifies:^air
doc:
  Unit Ventilator: An FCU that has direct access to outside air to provide
  the space with ventilation.  See `docHaystack::AHUs` chapter.
ductConfig:^ductConfigType
ductDeck:^ductDeckType
heatingProcess:^heatingProcessType
heats:^air
humidifies:^air
is:[^fcu]
lib:^lib:phIoT
ventilates:^air
wikipedia:`https://en.wikipedia.org/wiki/Fan_coil_unit`
---
def:^unocc
doc:
  Unoccupied mode of a space.
  See `docHaystack::Zones#occupancy` chapter.
is:[^marker]
lib:^lib:phIoT
---
children:[{equip},{point}]
def:^ups
doc:Uninterruptible power supply
is:[^equip]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Uninterruptible_power_supply`
---
def:^uri
doc:
  Universal resource identifier.
  See [Kinds chapter]`docHaystack::Kinds#uri`.
is:[^scalar]
lib:^lib:ph
---
def:^val
doc:Data value type
docTaxonomy
lib:^lib:ph
---
def:^valve
doc:Valve equipment or control point
is:[^marker]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Valve`
---
children:[{equip},{point},{valve cmd point},{valve sensor point}]
childrenFlatten:[^fluid,^pipeSectionType]
def:^valve-actuator
doc:"Actuator to regulate the flow of fluid."
is:[^actuator]
lib:^lib:phIoT
pipeSection:^pipeSectionType
regulates:^fluid
wikipedia:`https://en.wikipedia.org/wiki/Valve`
---
def:^variableAirVolume
doc:
  Delivers a variable volume of air flow.   Most variable volume systems
  are powered by a VFD fan. However other techniques such as inlet vanes
  may be used in older systems.
is:[^airVolumeAdjustabilityType]
lib:^lib:phIoT
---
children:[{discharge duct equip},{ductArea sp point},{equip},{hvacMode sp point},{inlet duct equip},{perimeterHeat cmd point},{point},{reheat cmd point},{thermostat equip}]
def:^vav
doc:
  Variable air volume terminal unit.  VAV systems use a constant air
  temperature with a variable air flow rate.  See `docHaystack::VAVs` chapter.
ductConfig:^ductConfigType
heatingProcess:^heatingProcessType
is:[^airTerminalUnit]
lib:^lib:phIoT
vavAirCircuit:^vavAirCircuitType
vavModulation:^vavModulationType
wikipedia:`https://en.wikipedia.org/wiki/Variable_air_volume`
---
def:^vav-parallel
doc:VAV pulls air from outside the primary air flow
is:[^vavAirCircuitType]
lib:^lib:phIoT
---
def:^vav-series
doc:VAV pulls air from the primary air flow
is:[^vavAirCircuitType]
lib:^lib:phIoT
---
def:^vavAirCircuit
doc:How does the VAV pull in air
is:[^choice]
lib:^lib:phIoT
of:^vavAirCircuitType
---
def:^vavAirCircuitType
doc:How does the VAV pull in air
is:[^marker]
lib:^lib:phIoT
---
def:^vavModulation
doc:How does VAV modulate the temp based on duct pressure
is:[^choice]
lib:^lib:phIoT
of:^vavModulationType
---
def:^vavModulationType
doc:How does VAV modulate the temp based on duct pressure
is:[^marker]
lib:^lib:phIoT
---
def:^vavZone
doc:AHU supplies air to VAV terminal units
is:[^ahuZoneDeliveryType]
lib:^lib:phIoT
---
def:^velocity
doc:Speed in a given direction
is:[^marker]
lib:^lib:phScience
---
def:^ventilates
doc:"Equipment brings fresh outside air into a space."
is:[^equipFunction]
lib:^lib:phIoT
of:^air
wikipedia:`https://en.wikipedia.org/wiki/Ventilation_(architecture)`
---
def:^ventilation
doc:"Duct to access fresh outside air only for ventilation, not economizing"
is:[^ductSectionType]
lib:^lib:phIoT
---
def:^version
doc:Version string formatted as decimal integers separated by a dot
is:[^str]
lib:^lib:ph
tagOn:[^lib]
---
children:[{equip},{point}]
def:^verticalTransport
doc:Equipment to move humans and materials
is:[^equip]
lib:^lib:phIoT
---
def:^vfd
doc:
  Variable-frequency drive.
  See `docHaystack::Motors` chapter.
is:[^marker]
lib:^lib:phIoT
tagOn:[^point,^motor]
wikipedia:`https://en.wikipedia.org/wiki/Variable-frequency_drive`
---
def:^vfd-freq
doc:"VFD frequency measured in \"Hz\"."
is:[^quantity]
lib:^lib:phIoT
prefUnit:["Hz"]
---
def:^vfd-speed
doc:"VFD speed measured in \"%\"; 0% is off and 100% is the fastest speed."
is:[^quantity]
lib:^lib:phIoT
prefUnit:["%"]
---
def:^visibility
doc:Distance at which light can be clearly discerned
is:[^quantity]
lib:^lib:phScience
prefUnit:["km","mile"]
quantityOf:[^weather]
---
def:^volt
doc:"Electrical voltage, potential difference"
is:[^marker]
lib:^lib:phScience
---
def:^volt-angle
doc:AC voltage phase angle
is:[^quantity]
lib:^lib:phIoT
prefUnit:["deg"]
quantityOf:[^ac-elec]
---
def:^volt-imbalance
doc:AC voltage phase imbalance
is:[^quantity]
lib:^lib:phIoT
prefUnit:["%"]
quantityOf:[^ac-elec]
---
def:^volt-magnitude
doc:Magnitude of electrical voltage
is:[^elec-volt]
lib:^lib:phIoT
prefUnit:["A"]
quantityOf:[^ac-elec]
---
def:^volume
doc:Three dimensional space occupied by a substance
is:[^quantity]
lib:^lib:phScience
prefUnit:["m³","ft³","L","gal"]
quantityOf:[^substance]
wikipedia:`https://en.wikipedia.org/wiki/Volume`
---
def:^warm
doc:
  Relatively warm in comparison to another substance, without being
  actively heated. The substance can be used as a source of energy for
  a heating process, for example a warm water well in an `ates` system.
is:[^marker]
lib:^lib:phIoT
---
def:^warm-water
doc:Relatively warm water without active heating
is:[^water]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Water`
---
def:^water
doc:Water in its liquid form
is:[^liquid]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Water`
---
def:^waterCooling
doc:Cooling using transfer of heat to water which is not explicitly chilled
is:[^coolingProcessType]
lib:^lib:phIoT
wikipedia:`https://en.wikipedia.org/wiki/Water_cooling`
---
def:^weather
doc:
  Associated with atmospheric air or phenomenon.
  See `docHaystack::Weather` chapter.
is:[^phenomenon]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Weather`
---
def:^weather-point
doc:
  Weather station observation point.
  See `docHaystack::Weather#points` chapter.
is:[^point]
lib:^lib:phIoT
pointFunction:^pointFunctionType
pointQuantity:^quantity
pointSubject:^phenomenon
---
def:^weatherCond
doc:Enumeration of weather conditions
enum:
  unknown
  clear
  partlyCloudy
  cloudy
  showers
  rain
  thunderstorms
  ice
  flurries
  snow
is:[^quantity]
lib:^lib:phScience
quantityOf:[^weather]
---
children:[{weather air temp sensor point},{weather air wetBulb sensor point},{weather air feelsLike sensor point},{weather air dewPoint sensor point},{weather air humidity sensor point},{weather air enthalpy sensor point},{weather atmospheric pressure sensor point},{weather cloudage sensor point},{weather daytime sensor point},{weather precipitation sensor point},{weather solar irradiance sensor point},{weather weatherCond sensor point},{weather wind speed sensor point},{weather wind direction sensor point},{weather visibility sensor point}]
def:^weatherStation
doc:
  Logical weather station and its measurement points.
  See `docHaystack::Weather#stations` chapter.
is:[^entity,^geoPlace]
lib:^lib:phIoT
mandatory
wikipedia:`https://en.wikipedia.org/wiki/Weather_station`
---
def:^weatherStationRef
doc:Reference to weather station for to use this entity
is:[^ref]
lib:^lib:phIoT
of:^weatherStation
tagOn:[^site,^weather-point]
---
children:[{equip},{point},{water flow sensor point},{water level sensor point},{water pressure sensor point},{water pump motor equip},{water temp sensor point},{water volume sensor point}]
def:^well
doc:
  A well is a source of groundwater and potentially thermal energy.  When
  used within an [ATES]`docHaystack::ATES` system, the well facilitates thermal
  energy exchange with the ground warm and cool water sources. In this case, a
  well can be either a closed system that transports water through pipes in the
  ground, or an open system that pumps up and returns ground water.
is:[^equip]
lib:^lib:phIoT
---
def:^wetBulb
doc:"Wet bulb air temperature.  Temperature which the air would have if cooled to saturation by the evaporation of water into it."
is:[^quantity]
lib:^lib:phScience
prefUnit:["°C","°F"]
quantityOf:[^air]
---
def:^wikipedia
doc:"Hyperlink to the subject's page on Wikipedia"
is:[^uri]
lib:^lib:ph
tagOn:[^def]
---
def:^wind
doc:Flow of air on surface of the Earth
is:[^phenomenon]
lib:^lib:phScience
wikipedia:`https://en.wikipedia.org/wiki/Wind`
---
def:^wind-direction
doc:Compass direction from which wind originates
is:[^direction]
lib:^lib:phScience
prefUnit:["deg"]
quantityOf:[^wind]
---
def:^wind-speed
doc:Wind flow speed
is:[^speed]
lib:^lib:phScience
prefUnit:["km/h","mph"]
quantityOf:[^wind]
---
children:[{equip},{point}]
conveys:^elec
def:^wire
doc:Cabling used to convey electricity or data
is:[^conduit]
lib:^lib:phIoT
---
def:^writable
doc:Supports writing data
is:[^marker]
lib:^lib:phIoT
tagOn:[^point]
---
def:^writable-point
doc:
  Point with writable output using 16-level priority array.  Writable
  points typically are a setpoint or actuator command.  Haystack writable
  points are modeled on the BACnet 16-level priority array with a
  relinquish default which effectively acts as level 17.
  
  The following levels have special behavior:
   - **Level 1**: highest priority reserved for emergency overrides
   - **Level 8**: manual override with ability to set timer to expire back to auto
   - **Default**: implicitly acts as level 17 for relinquish default
  
  The priority array provides for contention resolution when many different
  control applications may be vying for control of a given point. Low level
  applications like scheduling typically control levels 14, 15, or 16. Then
  users can override at level 8. But a higher levels like 2 to 7 can be used
  to trump a user override (for example a demand response energy routine
  that requires higher priority).
  
  The actual value to write is resolved by starting at level 1 and working down
  to relinquish default to find the first non-null value. It is possible for
  all levels to be null, in which case the overall write output is null (which
  in turn may be auto/null to another system). Anytime a null value is written
  to a priority level, we say that level has been set to auto or released (this
  allows the next highest level to take command of the output).
  
  Also see `docHaystack::Points#writable` chapter.
is:[^point]
lib:^lib:phIoT
pointFunction:^pointFunctionType
pointQuantity:^quantity
pointSubject:^phenomenon
---
def:^writeErr
doc:"Error description when `writeStatus` indicates error condition"
is:[^str]
lib:^lib:phIoT
tagOn:[^writable-point]
transient
---
def:^writeLevel
doc:
  Current priority level for `writeVal` as number between 1 and 17.
  The value 17 indicates the relinquish default value.
is:[^int]
lib:^lib:phIoT
maxVal:17
minVal:1
tagOn:[^writable-point]
transient
---
def:^writeStatus
doc:Current status of a writable point output
enum:
  - unbound: writable point is not bound to any output
  - ok: last write was successful
  - down: connectivity/networking problem - see `writeErr`
  - fault: configuration or hardware error  - see `writeErr`
  - disabled: manual disable of the point or connector
  - unknown: we don't know anything (typically boot state)
is:[^str]
lib:^lib:phIoT
tagOn:[^writable-point]
transient
---
def:^writeVal
doc:
  Current desired value to write to output.  This is the current "winning"
  value of the priority array indicated by `writeLevel`.  If this tag
  is missing then the winning value is null/auto.
is:[^scalar]
lib:^lib:phIoT
tagOn:[^writable-point]
transient
---
def:^xstr
doc:
  Extended string - type name and string value encoding.
  See [Kinds chapter]`docHaystack::Kinds#xstr`.
is:[^scalar]
lib:^lib:ph
---
def:^yearBuilt
doc:Original year of construction as four digit year such as 1980
is:[^int]
lib:^lib:phIoT
tagOn:[^site]
---
def:^zigbee
doc:Low power wireless communication protocol for home automation
is:[^protocol]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Zigbee`
---
def:^zone
doc:Related to spaces from a system perspective
is:[^marker]
lib:^lib:phIoT
---
children:[{equip},{occupancy sensor point},{occupied sensor point},{occupied sp point},{point},{space}]
def:^zone-space
doc:
  Space associated with a specific system.
  See `docHaystack::Spaces#zones` and `docHaystack::Zones` chapters.
is:[^space]
lib:^lib:phIoT
---
def:^zwave
doc:Low power wireless communication protocol for home automation
is:[^protocol]
lib:^lib:phIct
wikipedia:`https://en.wikipedia.org/wiki/Z-Wave`
---